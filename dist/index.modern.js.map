{"version":3,"file":"index.modern.js","sources":["../src/formBuilder/checkbox/FBCheckbox.js","../src/formBuilder/FontAwesomeIcon.js","../src/formBuilder/Collapse/Collapse.js","../src/formBuilder/radio/FBRadioButton.js","../src/formBuilder/radio/FBRadioGroup.js","../src/formBuilder/Tooltip.js","../src/formBuilder/utils.js","../src/formBuilder/dependencies/DependencyWarning.js","../src/formBuilder/dependencies/CardSelector.js","../src/formBuilder/CardEnumOptions.js","../src/formBuilder/dependencies/ValueSelector.js","../src/formBuilder/dependencies/DependencyPossibility.js","../src/formBuilder/dependencies/DependencyField.js","../src/formBuilder/CardModal.js","../src/formBuilder/GeneralParameterInputs.js","../src/formBuilder/CardGeneralParameterInputs.js","../src/formBuilder/Add.js","../src/formBuilder/Card.js","../src/formBuilder/defaults/defaultInputs.js","../src/formBuilder/Section.js","../src/formBuilder/styles.js","../src/formBuilder/inputs/PlaceholderInput.js","../src/formBuilder/defaults/shortAnswerInputs.js","../src/formBuilder/defaults/longAnswerInputs.js","../src/formBuilder/defaults/numberInputs.js","../src/formBuilder/defaults/arrayInputs.js","../src/formBuilder/defaults/referenceInputs.js","../src/formBuilder/defaults/defaultFormInputs.js","../src/formBuilder/FormBuilder.js","../src/formBuilder/CardGallery.js","../src/formBuilder/PredefinedGallery.js"],"sourcesContent":["// @flow\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport type { Node } from 'react';\n\nconst useStyles = createUseStyles({\n  checkbox: {\n    '& *': {\n      display: 'inline-block',\n    },\n    '& input': {\n      marginRight: '5px',\n    },\n  },\n});\n\ntype Props = {\n  onChangeValue: Function,\n  isChecked: boolean,\n  id?: string,\n  label?: string,\n  use?: string,\n  value?: string,\n  disabled?: boolean,\n  dataTest?: string,\n  labelClassName?: string,\n};\n\nexport default function FBCheckbox({\n  onChangeValue,\n  value = '',\n  isChecked = false,\n  label = '',\n  use = 'action',\n  disabled = false,\n  id = '',\n  dataTest = '',\n  labelClassName = '',\n}: Props): Node {\n  const classjss = useStyles();\n  const classes = classnames('fb-checkbox', {\n    'edit-checkbox': !disabled && use === 'edit',\n    'action-checkbox': !disabled && use === 'action',\n    'disabled-checked-checkbox': disabled && isChecked,\n    'disabled-unchecked-checkbox': disabled && !isChecked,\n  });\n  const potentialCheckboxId = id !== '' ? id : label;\n  const checkboxId = potentialCheckboxId !== '' ? potentialCheckboxId : null;\n  return (\n    <div data-test='checkbox' className={`${classes} ${classjss.checkbox}`}>\n      <input\n        type='checkbox'\n        id={checkboxId}\n        data-test={dataTest || undefined}\n        onChange={disabled ? () => {} : onChangeValue}\n        value={value}\n        disabled={disabled}\n        checked={isChecked}\n      />\n      <div className='checkbox-overlay'>\n        {label && (\n          <label htmlFor={checkboxId} className={labelClassName || undefined}>\n            {label}\n          </label>\n        )}\n      </div>\n    </div>\n  );\n}\n","// @flow\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport { FontAwesomeIcon as FortAwesomeFontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport type { Node } from 'react';\n\nexport default function FontAwesomeIcon({\n  className,\n  ...otherProps\n}: {\n  className?: string,\n  [string]: any,\n}): Node {\n  const props = Object.assign(\n    { className: classnames([className, 'fa']) },\n    otherProps,\n  );\n  return <FortAwesomeFontAwesomeIcon {...props} />;\n}\n","// @flow\n\nimport React from 'react';\nimport type { Node } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { Collapse as RSCollapse } from 'reactstrap';\nimport classnames from 'classnames';\nimport { faCaretDown, faCaretRight } from '@fortawesome/free-solid-svg-icons';\nimport FontAwesomeIcon from '../FontAwesomeIcon';\n\nconst useStyles = createUseStyles({\n  collapseElement: {\n    '& .disabled': { '.toggle-collapse': { cursor: 'default' } },\n    '& h4': { marginTop: '7px', padding: '13px 10px 10px 10px' },\n    '& .toggle-collapse': {\n      fontSize: '2.3rem',\n      cursor: 'pointer',\n      marginLeft: '33px',\n      '& .fa-caret-right': {\n        marginRight: '9px',\n      },\n    },\n  },\n});\n\ntype Props = {\n  // Determines if the Collapse component is open\n  isOpen: boolean,\n  // Toggles the isOpen boolean between true and false\n  toggleCollapse: () => void,\n  // The title to display in the collapse header\n  title: Node,\n  // Anything to be rendered within the collapse\n  children: any,\n  // If true will gray out and disable */\n  disableToggle?: boolean,\n  className?: string,\n};\n\nexport default function Collapse(props: Props): Node {\n  const classes = classnames(\n    `collapse-element ${props.className || ''} ${useStyles().collapseElement}`,\n    {\n      disabled: props.disableToggle,\n    },\n  );\n\n  return (\n    <div className={classes}>\n      <div className='d-flex'>\n        <span className='toggle-collapse'>\n          <FontAwesomeIcon\n            onClick={!props.disableToggle ? props.toggleCollapse : () => {}}\n            icon={props.isOpen ? faCaretDown : faCaretRight}\n          />\n        </span>\n        <h4>{props.title}</h4>\n      </div>\n      <RSCollapse isOpen={props.isOpen}>\n        <div>{props.children}</div>\n      </RSCollapse>\n    </div>\n  );\n}\n","// @flow\n\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport type { Node } from 'react';\n\ntype Props = {\n  label: Node,\n  value?: any,\n  name?: string,\n  checked?: boolean,\n  required?: boolean,\n  disabled?: boolean,\n  autoFocus?: boolean,\n  onChange: (any) => void,\n};\n\nexport default function FBRadioButton(props: Props): Node {\n  const {\n    label,\n    value,\n    checked,\n    name,\n    onChange,\n    required,\n    disabled,\n    autoFocus,\n  } = props;\n  const [id] = useState(`radio-${Math.floor(Math.random() * 1000000)}`);\n  const classes = classnames('fb-radio-button', { disabled });\n  return (\n    <div className={classes} key={value}>\n      <input\n        id={id}\n        type='radio'\n        name={name}\n        value={value}\n        checked={checked}\n        required={required}\n        disabled={disabled}\n        autoFocus={autoFocus}\n        onChange={() => onChange(value)}\n      />\n      <label htmlFor={id}>{label}</label>\n    </div>\n  );\n}\n","// @flow\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport type { Node } from 'react';\nimport FBRadioButton from './FBRadioButton';\n\nconst useStyles = createUseStyles({\n  radio: {\n    '& .fb-radio-button': {\n      display: 'block',\n      '& input[type=\"radio\"]': {\n        marginRight: '5px',\n        marginBottom: 0,\n        height: '1em',\n        verticalAlign: 'middle',\n      },\n      '& input[type=\"radio\"] + label': {\n        marginTop: 0,\n        marginBottom: 0,\n        verticalAlign: 'middle',\n      },\n    },\n  },\n});\n\ntype Props = {\n  options: Array<{ label: Node, value: string | number }>,\n  defaultValue?: any,\n  horizontal?: boolean,\n  id?: string,\n  required?: boolean,\n  disabled?: boolean,\n  autoFocus?: boolean,\n  onChange: (any) => void,\n};\n\nexport default function FBRadioGroup(props: Props): Node {\n  const {\n    options,\n    defaultValue,\n    onChange,\n    horizontal,\n    id,\n    autoFocus,\n    disabled,\n  } = props;\n  const name = Math.random().toString();\n  const classjss = useStyles();\n  const classes = classnames('fb-radio-group', {\n    horizontal,\n  });\n  return (\n    <div id={id} className={`${classes} ${classjss.radio}`}>\n      {options.map((option, index) => (\n        <FBRadioButton\n          value={option.value}\n          label={option.label}\n          id={id}\n          name={name}\n          key={option.value}\n          checked={option.value === defaultValue}\n          autoFocus={autoFocus && index === 1}\n          onChange={onChange}\n          disabled={disabled}\n        />\n      ))}\n    </div>\n  );\n}\n","// @flow\n\n/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\nimport React from 'react';\nimport type { Node } from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport {\n  faAsterisk,\n  faQuestionCircle,\n} from '@fortawesome/free-solid-svg-icons';\nimport FontAwesomeIcon from './FontAwesomeIcon';\n\nconst typeMap = {\n  alert: faAsterisk,\n  help: faQuestionCircle,\n};\n\nconst useStyles = createUseStyles({\n  toolTip: {\n    color: 'white',\n    'background-color': 'black',\n  },\n});\n\nexport default function Example({\n  text,\n  type,\n  id,\n}: {\n  text: Node,\n  type: 'alert' | 'help',\n  id: string,\n}): Node {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <span\n        style={{ textDecoration: 'underline', color: 'blue' }}\n        href='#'\n        id={id}\n      >\n        <FontAwesomeIcon icon={typeMap[type]} />\n      </span>\n      <UncontrolledTooltip\n        autohide={false}\n        className={classes.toolTip}\n        placement='top'\n        target={id}\n      >\n        {text}\n      </UncontrolledTooltip>\n    </React.Fragment>\n  );\n}\n","// @flow\nimport * as React from 'react';\nimport type { Node } from 'react';\nimport type {\n  CardBody,\n  CardProps,\n  ElementProps,\n  FormInput,\n  Mods,\n  ModalBody,\n  DataOptions,\n  DataType,\n} from './types';\n\n// parse in either YAML or JSON\nexport function parse(text: string): any {\n  if (!text) return {};\n  return JSON.parse(text);\n}\n\n// stringify in either YAML or JSON\nexport function stringify(obj: any): string {\n  if (!obj) return '{}';\n  return JSON.stringify(obj);\n}\n\nexport function defaultDataProps(\n  category: string,\n  allFormInputs: { [string]: FormInput },\n): { [string]: any } {\n  return allFormInputs[category].defaultDataSchema;\n}\n\nexport function defaultUiProps(\n  category: string,\n  allFormInputs: { [string]: FormInput },\n): { [string]: any } {\n  return allFormInputs[category].defaultUiSchema;\n}\nexport function categoryType(\n  category: string,\n  allFormInputs: { [string]: FormInput },\n): DataType {\n  return allFormInputs[category].type;\n}\nexport function getCardBody(\n  category: string,\n  allFormInputs: { [string]: FormInput },\n): CardBody {\n  return (\n    (allFormInputs[category] && allFormInputs[category].cardBody) ||\n    (() => null)\n  );\n}\nexport function categoryToNameMap(\n  category: string,\n  allFormInputs: { [string]: FormInput },\n): { [string]: string } {\n  const categoryNameMap = {};\n  Object.keys(allFormInputs).forEach((inputName) => {\n    categoryNameMap[inputName] = allFormInputs[inputName].displayName;\n  });\n  return categoryNameMap;\n}\n\nfunction updateElementNames(elementArray: Array<ElementProps>) {\n  const elementNames = elementArray.map((elem) => elem.name);\n  return elementArray.map((elem) => {\n    const newElem = elem;\n    newElem.neighborNames = elementNames;\n    return newElem;\n  });\n}\n\nexport function generateCategoryHash(allFormInputs: { [string]: FormInput }): {\n  [string]: string,\n} {\n  const categoryHash = {};\n  Object.keys(allFormInputs).forEach((categoryName) => {\n    const formInput = allFormInputs[categoryName];\n    formInput.matchIf.forEach((match) => {\n      match.types.forEach((type) => {\n        const hash = `type:${type === 'null' ? '' : type};widget:${\n          match.widget || ''\n        };field:${match.field || ''};format:${match.format || ''};$ref:${\n          match.$ref ? 'true' : 'false'\n        };enum:${match.enum ? 'true' : 'false'}`;\n        if (categoryHash[hash]) {\n          throw new Error(`Duplicate hash: ${hash}`);\n        }\n        categoryHash[hash] = categoryName;\n      });\n    });\n  });\n  return categoryHash;\n}\n\n// determines a card's category based on it's properties\n// mostly useful for reading a schema for the first time\nexport function getCardCategory(\n  cardProps: CardProps,\n  categoryHash: { [string]: string },\n): string {\n  const currentHash = `type:${cardProps.dataOptions.type || ''};widget:${\n    cardProps.uiOptions['ui:widget'] || ''\n  };field:${cardProps.uiOptions['ui:field'] || ''};format:${\n    cardProps.dataOptions.format || ''\n  };$ref:${cardProps.$ref !== undefined ? 'true' : 'false'};enum:${\n    cardProps.dataOptions.enum ? 'true' : 'false'\n  }`;\n  const category = categoryHash[currentHash];\n  if (!category) {\n    if (cardProps.$ref) return 'ref';\n    // eslint-disable-next-line no-console\n    console.error(`No match for card': ${currentHash} among set`);\n    return 'shortAnswer';\n  }\n  return category;\n}\n\n// check for unsupported feature in schema and uischema\nconst supportedPropertyParameters = new Set([\n  'title',\n  'description',\n  'enum',\n  'minLength',\n  'maxLength',\n  'multipleOf',\n  'minimum',\n  'maximum',\n  'format',\n  'exclusiveMinimum',\n  'exclusiveMaximum',\n  'type',\n  'default',\n  'pattern',\n  'required',\n  'properties',\n  'items',\n  'definitions',\n  '$ref',\n  'minItems',\n  'maxItems',\n  'enumNames',\n  'dependencies',\n  '$id',\n  '$schema',\n  'meta',\n  'additionalProperties',\n]);\n\nconst supportedUiParameters = new Set([\n  'ui:order',\n  'ui:widget',\n  'ui:autofocus',\n  'ui:autocomplete',\n  'ui:options',\n  'ui:field',\n  'ui:placeholder',\n  'ui:column',\n  'items',\n  'definitions',\n]);\n\n// recursively called function to check an object for unsupported features\nfunction checkObjectForUnsupportedFeatures(\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  supportedWidgets: Set<string>,\n  supportedFields: Set<string>,\n  supportedOptions: Set<string>,\n) {\n  // add each unsupported feature to this array\n  const unsupportedFeatures = [];\n\n  // check for unsupported whole object features\n  if (schema && typeof schema === 'object')\n    Object.keys(schema).forEach((property) => {\n      if (\n        !supportedPropertyParameters.has(property) &&\n        property !== 'properties'\n      )\n        unsupportedFeatures.push(`Unrecognized Object Property: ${property}`);\n    });\n\n  if (uischema && typeof uischema === 'object')\n    Object.keys(uischema).forEach((uiProperty) => {\n      let propDefined = false;\n      // search for the property in the schema properties and dependencies\n      if (\n        schema.properties &&\n        Object.keys(schema.properties).includes(uiProperty)\n      )\n        propDefined = true;\n      if (schema.dependencies) {\n        Object.keys(schema.dependencies).forEach((dependencyKey) => {\n          Object.keys(schema.dependencies[dependencyKey]).forEach(\n            (parameter) => {\n              if (parameter === 'oneOf') {\n                schema.dependencies[dependencyKey].oneOf.forEach((grouping) => {\n                  if (grouping.properties)\n                    if (Object.keys(grouping.properties).includes(uiProperty))\n                      propDefined = true;\n                });\n              } else if (parameter === 'properties') {\n                if (\n                  Object.keys(\n                    schema.dependencies[dependencyKey].properties,\n                  ).includes(uiProperty)\n                )\n                  propDefined = true;\n              }\n            },\n          );\n        });\n      }\n\n      if (!propDefined && !supportedUiParameters.has(uiProperty))\n        unsupportedFeatures.push(\n          `Unrecognized UI schema property: ${uiProperty}`,\n        );\n    });\n\n  // check for unsupported property parameters\n  if (schema.properties)\n    Object.entries(schema.properties).forEach(\n      ([parameter, element]: [string, any]) => {\n        if (\n          element &&\n          typeof element === 'object' &&\n          element.type &&\n          element.type !== 'object'\n        ) {\n          // make sure that the type is valid\n          if (\n            !['array', 'string', 'integer', 'number', 'boolean'].includes(\n              element.type,\n            )\n          )\n            unsupportedFeatures.push(\n              `Unrecognized type: ${element.type} in ${parameter}`,\n            );\n          // check the properties of each property if it is a basic object\n          Object.keys(element).forEach((key) => {\n            if (!supportedPropertyParameters.has(key))\n              unsupportedFeatures.push(\n                `Property Parameter: ${key} in ${parameter}`,\n              );\n          });\n        } else {\n          // check the properties of each property if it is a basic object\n          Object.keys(element).forEach((key) => {\n            if (!supportedPropertyParameters.has(key))\n              unsupportedFeatures.push(\n                `Property Parameter: ${key} in ${parameter}`,\n              );\n          });\n        }\n\n        // check for unsupported UI components\n        if (\n          uischema &&\n          uischema[parameter] &&\n          element &&\n          (!element.type || element.type !== 'object')\n        ) {\n          // check for unsupported ui properties\n          Object.keys(uischema[parameter]).forEach((uiProp) => {\n            if (!supportedUiParameters.has(uiProp))\n              unsupportedFeatures.push(\n                `UI Property: ${uiProp} for ${parameter}`,\n              );\n\n            // check for unsupported ui widgets\n            if (\n              uiProp === 'ui:widget' &&\n              !supportedWidgets.has(uischema[parameter][uiProp])\n            ) {\n              unsupportedFeatures.push(\n                `UI Widget: ${uischema[parameter][uiProp]} for ${parameter}`,\n              );\n            }\n\n            // check for unsupported ui fields\n            if (\n              uiProp === 'ui:field' &&\n              !supportedFields.has(uischema[parameter][uiProp])\n            )\n              unsupportedFeatures.push(\n                `UI Field: ${uischema[parameter][uiProp]} for ${parameter}`,\n              );\n\n            // check unsupported ui option\n            if (uiProp === 'ui:options')\n              Object.keys(uischema[parameter]['ui:options']).forEach(\n                (uiOption) => {\n                  if (!supportedOptions.has(uiOption))\n                    unsupportedFeatures.push(\n                      `UI Property: ui:options.${uiOption} for ${parameter}`,\n                    );\n                },\n              );\n          });\n        }\n      },\n    );\n  return unsupportedFeatures;\n}\n\n// parent function that checks for unsupported features in an entire document\nexport function checkForUnsupportedFeatures(\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  allFormInputs: { [string]: FormInput },\n): string[] {\n  // add each unsupported feature to this array\n  const unsupportedFeatures = [];\n\n  const widgets = [];\n  const fields = [];\n  const options = [];\n  Object.keys(allFormInputs).forEach((inputType) => {\n    allFormInputs[inputType].matchIf.forEach((match) => {\n      if (match.widget && !widgets.includes(match.widget))\n        widgets.push(match.widget);\n      if (match.field && !fields.includes(match.field))\n        fields.push(match.field);\n    });\n    if (\n      allFormInputs[inputType].possibleOptions &&\n      Array.isArray(allFormInputs[inputType].possibleOptions)\n    ) {\n      options.push(...allFormInputs[inputType].possibleOptions);\n    }\n  });\n  const supportedWidgets = new Set(widgets);\n  const supportedFields = new Set(fields);\n  const supportedOptions = new Set(options);\n\n  // check for unsupported whole form features\n  if (schema && typeof schema === 'object' && schema.type === 'object') {\n    unsupportedFeatures.push(\n      ...checkObjectForUnsupportedFeatures(\n        schema,\n        uischema,\n        supportedWidgets,\n        supportedFields,\n        supportedOptions,\n      ),\n    );\n  } else {\n    unsupportedFeatures.push('jsonSchema form is not of type object');\n  }\n\n  return unsupportedFeatures;\n}\n\n// make an element out of the corresponding properties and UI properties\nfunction generateDependencyElement(\n  name: string,\n  dataProps: any,\n  uiProperties: any,\n  requiredNames: any,\n  definitionData?: { [string]: any },\n  definitionUi?: { [string]: any },\n  categoryHash: { [string]: string },\n  useDefinitionDetails: boolean = true, // determines whether to use an element's definition details or not.\n) {\n  let uiProps = {\n    ...uiProperties,\n  };\n  const newElement = {};\n  let elementDetails =\n    dataProps && typeof dataProps === 'object' ? dataProps : {};\n\n  // populate newElement with reference if applicable\n  if (elementDetails.$ref !== undefined && definitionData) {\n    const pathArr =\n      typeof elementDetails.$ref === 'string'\n        ? elementDetails.$ref.split('/')\n        : [];\n    if (\n      pathArr[0] === '#' &&\n      pathArr[1] === 'definitions' &&\n      definitionData[pathArr[2]] &&\n      useDefinitionDetails === true\n    ) {\n      elementDetails = {\n        ...elementDetails,\n        ...definitionData[pathArr[2]],\n      };\n    }\n\n    const definedUiProps = (definitionUi || {})[pathArr[2]];\n    uiProps = {\n      ...(definedUiProps || {}),\n      ...uiProps,\n    };\n  }\n\n  newElement.name = name;\n  newElement.required = requiredNames.includes(name);\n  newElement.$ref =\n    typeof elementDetails.$ref === 'string' ? elementDetails.$ref : undefined;\n\n  if (elementDetails.type && elementDetails.type === 'object') {\n    // create a section\n    newElement.schema = elementDetails;\n    newElement.uischema = uiProps || {};\n    newElement.propType = 'section';\n  } else {\n    // create a card\n    newElement.dataOptions = elementDetails;\n    newElement.uiOptions = uiProps || {};\n\n    // ensure that uiOptions does not have duplicate keys with dataOptions\n    const reservedKeys = Object.keys(newElement.dataOptions);\n    Object.keys(newElement.uiOptions).forEach((uiKey) => {\n      if (reservedKeys.includes(uiKey)) {\n        newElement.uiOptions[`ui:*${uiKey}`] = newElement.uiOptions[uiKey];\n      }\n    });\n\n    newElement.dataOptions.category = getCardCategory(newElement, categoryHash);\n    newElement.propType = 'card';\n  }\n  return newElement;\n}\n\n// generate an array of element objects from a schema and uischema\nexport function generateElementPropsFromSchemas(parameters: {\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  definitionData?: { [string]: any },\n  definitionUi?: { [string]: any },\n  categoryHash: { [string]: string },\n}): Array<ElementProps> {\n  const { schema, uischema, definitionData, definitionUi, categoryHash } =\n    parameters;\n\n  if (!schema.properties) return [];\n\n  const elementDict = {};\n  const requiredNames = schema.required ? schema.required : [];\n\n  // read regular elements from properties\n  Object.entries(schema.properties).forEach(([parameter, element]) => {\n    const newElement = {};\n    let elementDetails =\n      element && typeof element === 'object'\n        ? (element: {\n            ...any,\n            $ref?: string,\n          })\n        : {};\n\n    // populate newElement with reference if applicable\n    if (elementDetails.$ref !== undefined && definitionData) {\n      if (\n        elementDetails.$ref &&\n        !elementDetails.$ref.startsWith('#/definitions')\n      )\n        throw new Error(\n          `Invalid definition, not at '#/definitions': ${elementDetails.$ref}`,\n        );\n      const pathArr =\n        elementDetails.$ref !== undefined ? elementDetails.$ref.split('/') : [];\n      if (\n        pathArr[0] === '#' &&\n        pathArr[1] === 'definitions' &&\n        definitionData[pathArr[2]]\n      ) {\n        elementDetails = {\n          ...definitionData[pathArr[2]],\n          ...elementDetails,\n        };\n      }\n\n      const definedUiProps = (definitionUi || {})[pathArr[2]];\n      uischema[parameter] = {\n        ...(definedUiProps || {}),\n        ...uischema[parameter],\n      };\n    }\n    newElement.name = parameter;\n    newElement.required = requiredNames.includes(parameter);\n    newElement.$ref = elementDetails.$ref;\n    newElement.dataOptions = elementDetails;\n\n    if (elementDetails.type && elementDetails.type === 'object') {\n      // create a section\n      newElement.schema = elementDetails;\n      newElement.uischema = uischema[parameter] || {};\n      newElement.propType = 'section';\n    } else {\n      // create a card\n      newElement.uiOptions = uischema[parameter] || {};\n\n      // ensure that uiOptions does not have duplicate keys with dataOptions\n      const reservedKeys = Object.keys(newElement.dataOptions);\n      Object.keys(newElement.uiOptions).forEach((uiKey) => {\n        if (reservedKeys.includes(uiKey)) {\n          newElement.uiOptions[`ui:*${uiKey}`] = newElement.uiOptions[uiKey];\n        }\n      });\n\n      newElement.dataOptions.category = getCardCategory(\n        newElement,\n        categoryHash,\n      );\n      newElement.propType = 'card';\n    }\n    elementDict[newElement.name] = newElement;\n  });\n  // read dependent elements from dependencies\n  if (schema.dependencies) {\n    const useDefinitionDetails = false;\n    Object.keys(schema.dependencies).forEach((parent) => {\n      const group = schema.dependencies[parent];\n      if (group.oneOf) {\n        let possibilityIndex = 0;\n        group.oneOf.forEach((possibility) => {\n          if (!elementDict[parent].dependents) {\n            elementDict[parent].dependents = [];\n          }\n          elementDict[parent].dependents.push({\n            children: [],\n            value: possibility.properties[parent],\n          });\n          const requiredValues = possibility.required || [];\n          Object.entries(possibility.properties).forEach(\n            ([parameter, element]) => {\n              // create a new element if not present in main properties\n              if (!Object.keys(elementDict).includes(parameter)) {\n                const newElement = generateDependencyElement(\n                  parameter,\n                  element,\n                  uischema[parameter],\n                  requiredNames,\n                  definitionData,\n                  definitionUi,\n                  categoryHash,\n                  useDefinitionDetails,\n                );\n                newElement.required = requiredValues.includes(newElement.name);\n                elementDict[newElement.name] = newElement;\n              }\n              if (parameter !== parent) {\n                const newElement = elementDict[parameter];\n                newElement.dependent = true;\n                newElement.parent = parent;\n                elementDict[parent].dependents[possibilityIndex].children.push(\n                  parameter,\n                );\n              }\n            },\n          );\n          possibilityIndex += 1;\n        });\n      } else if (group.properties) {\n        const requiredValues = group.required || [];\n        Object.entries(group.properties).forEach(([parameter, element]) => {\n          const newElement = generateDependencyElement(\n            parameter,\n            element,\n            uischema[parameter],\n            requiredNames,\n            definitionData,\n            definitionUi,\n            categoryHash,\n            useDefinitionDetails,\n          );\n          newElement.required = requiredValues.includes(newElement.name);\n          newElement.dependent = true;\n          newElement.parent = parent;\n          elementDict[newElement.name] = newElement;\n          if (elementDict[parent].dependents) {\n            elementDict[parent].dependents[0].children.push(parameter);\n          } else {\n            elementDict[parent].dependents = [{ children: [parameter] }];\n          }\n        });\n      } else {\n        // eslint-disable-next-line no-console\n        console.error('unsupported dependency type encountered');\n      }\n    });\n  }\n\n  // now reorder in accordance with ui:order if defined\n  const cardPropList = [];\n  if (uischema['ui:order']) {\n    // in case there are any options not in ui:order\n    const remainder = [];\n    Object.keys(elementDict).forEach((name) => {\n      if (!uischema['ui:order'].includes(name))\n        remainder.push(elementDict[name]);\n    });\n\n    // map ui order elements into the right order\n    uischema['ui:order'].forEach((name) => {\n      // if contains the wildcard *, insert remainder cards there\n      if (name === '*') {\n        remainder.forEach((remCard) => {\n          cardPropList.push(remCard);\n        });\n      } else if (elementDict[name]) {\n        cardPropList.push(elementDict[name]);\n      }\n    });\n  } else {\n    Object.keys(elementDict).forEach((name) => {\n      cardPropList.push(elementDict[name]);\n    });\n  }\n\n  updateElementNames(cardPropList);\n  return (cardPropList: Array<ElementProps>);\n}\n\n// determine the number of element objects from schema and uischema\nexport function countElementsFromSchema(schemaData: any): number {\n  if (!schemaData.properties) return 0;\n  const elementDict = {};\n  let elementCount = 0;\n\n  // read regular elements from properties\n  Object.entries(schemaData.properties).forEach(([parameter]) => {\n    elementDict[parameter] = {};\n    elementCount += 1;\n  });\n  // read dependent elements from dependencies\n  if (schemaData.dependencies) {\n    Object.keys(schemaData.dependencies).forEach((parent) => {\n      const group = schemaData.dependencies[parent];\n      if (group.oneOf) {\n        let possibilityIndex = 0;\n        group.oneOf.forEach((possibility) => {\n          if (!elementDict[parent].dependents) {\n            elementDict[parent].dependents = [];\n          }\n          elementDict[parent].dependents.push({\n            children: [],\n            value: possibility.properties[parent],\n          });\n          Object.entries(possibility.properties).forEach(([parameter]) => {\n            // create a new element if not present in main properties\n            if (!Object.keys(elementDict).includes(parameter)) {\n              elementDict[parameter] = {};\n              elementCount += 1;\n            }\n            if (parameter !== parent) {\n              const newElement = elementDict[parameter];\n              newElement.dependent = true;\n              newElement.parent = parent;\n              elementDict[parent].dependents[possibilityIndex].children.push(\n                parameter,\n              );\n            }\n          });\n          possibilityIndex += 1;\n        });\n      } else if (group.properties) {\n        Object.entries(group.properties).forEach(([parameter]) => {\n          elementDict[parameter] = {};\n          elementCount += 1;\n          if (elementDict[parent].dependents) {\n            elementDict[parent].dependents[0].children.push(parameter);\n          } else {\n            elementDict[parent].dependents = [{ children: [parameter] }];\n          }\n        });\n      } else {\n        // eslint-disable-next-line no-console\n        console.error('unsupported dependency type encountered');\n      }\n    });\n  }\n\n  return (elementCount: number);\n}\n\n// convert an element into a schema equivalent\nfunction generateSchemaElementFromElement(element: ElementProps) {\n  if (element.$ref !== undefined) {\n    const title =\n      element.schema !== undefined && element.schema.title !== undefined\n        ? element.schema.title\n        : element.dataOptions.title;\n    const description =\n      element.schema !== undefined && element.schema.description !== undefined\n        ? element.schema.description\n        : element.dataOptions.description;\n\n    let returnElement = {\n      $ref: element.$ref,\n      title: title,\n      description: description,\n    };\n\n    const length = element?.schema?.required?.length;\n    if (length !== undefined && length > 0) {\n      returnElement = { ...returnElement, required: element.schema.required };\n    }\n    return returnElement;\n  } else if (element.propType === 'card') {\n    if (element.dataOptions.category === 'section') {\n      return {\n        type: 'object',\n      };\n    } else {\n      const prop = {};\n\n      Object.keys(element.dataOptions).forEach((key) => {\n        if (\n          ![\n            'category',\n            'hideKey',\n            'path',\n            'definitionData',\n            'definitionUi',\n            'allFormInputs',\n          ].includes(key) &&\n          element.dataOptions[key] !== ''\n        )\n          prop[key] = element.dataOptions[key];\n      });\n      return prop;\n    }\n  } else if (element.propType === 'section') {\n    return element.schema;\n  } else {\n    throw new Error('Element that is neither card, section, nor ref');\n  }\n}\n\n// generate a new schema from a complete array of card objects\nexport function generateSchemaFromElementProps(\n  elementArr: Array<ElementProps>,\n): { [string]: any, definitions?: { [string]: any }, ... } {\n  if (!elementArr) return {};\n  const newSchema = {};\n\n  const props = {};\n  const dependencies = {};\n  const elementDict = {};\n  const dependentElements = new Set([]);\n  for (let index = 0; index < elementArr.length; index += 1) {\n    const element = elementArr[index];\n    elementDict[element.name] = { ...element };\n    if (element.dependents)\n      element.dependents.forEach((possibility) => {\n        possibility.children.forEach((dependentElement) => {\n          dependentElements.add(dependentElement);\n        });\n      });\n  }\n  Object.keys(elementDict).forEach((elementName) => {\n    const element = elementDict[elementName];\n    if (element.dependents && element.dependents[0]) {\n      if (element.dependents[0].value) {\n        // handle value based case\n        dependencies[elementName] = {\n          oneOf: element.dependents.map((possibility) => {\n            const childrenComponents = {};\n            const requiredValues = [];\n            possibility.children.forEach((child) => {\n              if (elementDict[child]) {\n                childrenComponents[child] = generateSchemaElementFromElement(\n                  elementDict[child],\n                );\n                if (elementDict[child].required) requiredValues.push(child);\n              }\n            });\n            return {\n              properties: {\n                [elementName]: possibility.value,\n                ...childrenComponents,\n              },\n              required: requiredValues,\n            };\n          }),\n        };\n      } else {\n        // handle definition based case\n        const childrenComponents = {};\n        const requiredValues = [];\n        element.dependents[0].children.forEach((child) => {\n          childrenComponents[child] = generateSchemaElementFromElement(\n            elementDict[child],\n          );\n          if (elementDict[child].required) requiredValues.push(child);\n        });\n        dependencies[elementName] = {\n          properties: childrenComponents,\n          required: requiredValues,\n        };\n      }\n    }\n    if (!dependentElements.has(elementName))\n      props[element.name] = generateSchemaElementFromElement(element);\n  });\n\n  newSchema.properties = props;\n  newSchema.dependencies = dependencies;\n  newSchema.required = elementArr\n    .filter(({ required, dependent }) => required && !dependent)\n    .map(({ name }) => name);\n\n  return newSchema;\n}\n\nexport function generateUiSchemaFromElementProps(\n  elementArr: Array<ElementProps>,\n  definitionUi: any,\n): { [string]: any, definitions?: { [string]: any }, ... } {\n  if (!elementArr) return {};\n\n  const uiSchema = {};\n  const uiOrder = [];\n  const definitions = definitionUi;\n\n  elementArr.forEach((element) => {\n    uiOrder.push(element.name);\n    if (element.$ref !== undefined) {\n      // look for the reference\n      const pathArr =\n        typeof element.$ref === 'string' ? element.$ref.split('/') : [];\n      if (definitions && definitions[pathArr[2]])\n        uiSchema[element.name] = definitions[pathArr[2]];\n    }\n    if (element.propType === 'card' && element.uiOptions) {\n      Object.keys(element.uiOptions).forEach((uiOption) => {\n        if (!uiSchema[element.name]) uiSchema[element.name] = {};\n        if (uiOption.startsWith('ui:*')) {\n          uiSchema[element.name][uiOption.substring(4)] =\n            element.uiOptions[uiOption];\n        } else {\n          uiSchema[element.name][uiOption] = element.uiOptions[uiOption];\n        }\n      });\n    } else if (\n      element.propType === 'section' &&\n      Object.keys(element.uischema).length > 0\n    ) {\n      uiSchema[element.name] = element.uischema;\n    }\n  });\n\n  uiSchema['ui:order'] = uiOrder;\n\n  return uiSchema;\n}\n\nexport function getCardParameterInputComponentForType(\n  category: string,\n  allFormInputs: { [string]: FormInput },\n): ModalBody {\n  return (\n    (allFormInputs[category] && allFormInputs[category].modalBody) ||\n    (() => null)\n  );\n}\n\n// takes in an array of Card Objects and updates both schemas\nexport function updateSchemas(\n  elementArr: Array<ElementProps>,\n  parameters: {\n    schema: { [string]: any, definitions?: { [string]: any }, ... },\n    uischema: { [string]: any, definitions?: { [string]: any }, ... },\n    onChange: ({ [string]: any }, { [string]: any }) => any,\n    definitionData?: { [string]: any },\n    definitionUi?: { [string]: any },\n  },\n) {\n  const { schema, uischema, onChange, definitionUi } = parameters;\n  const newSchema = Object.assign(\n    { ...schema },\n    generateSchemaFromElementProps(elementArr),\n  );\n\n  const newUiSchema: {\n    [string]: any,\n    definitions?: { [string]: any },\n    ...\n  } = generateUiSchemaFromElementProps(elementArr, definitionUi);\n  if (uischema.definitions) {\n    newUiSchema.definitions = uischema.definitions;\n  }\n\n  // mandate that the type is an object if not already done\n  newSchema.type = 'object';\n  onChange(newSchema, newUiSchema);\n}\n\nexport const DEFAULT_INPUT_NAME = 'newInput';\n\n// ensure that each added block has a unique name\nfunction getIdFromElementsBlock(elements: Array<ElementProps>) {\n  const names = elements.map((element) => element.name);\n  const defaultNameLength = DEFAULT_INPUT_NAME.length;\n\n  return names.length > 0\n    ? Math.max(\n        ...names.map((name) => {\n          if (name.startsWith(DEFAULT_INPUT_NAME)) {\n            const index = name.substring(defaultNameLength, name.length);\n            const value = Number.parseInt(index);\n\n            if (!isNaN(value)) {\n              return value;\n            }\n          }\n\n          return 0;\n        }),\n      ) + 1\n    : 1;\n}\n\n// given an initial schema, update with a new card appended\nexport function addCardObj(parameters: {\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  mods?: Mods,\n  onChange: ({ [string]: any }, { [string]: any }) => any,\n  definitionData: { [string]: any },\n  definitionUi: { [string]: any },\n  index?: number,\n  categoryHash: { [string]: string },\n}) {\n  const {\n    schema,\n    uischema,\n    mods,\n    onChange,\n    definitionData,\n    definitionUi,\n    index,\n    categoryHash,\n  } = parameters;\n  const newElementObjArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  const i = getIdFromElementsBlock(newElementObjArr);\n  const dataOptions = getNewElementDefaultDataOptions(i, mods);\n\n  const newElement = ({\n    name: `${DEFAULT_INPUT_NAME}${i}`,\n    required: false,\n    dataOptions: dataOptions,\n    uiOptions: (mods && mods.newElementDefaultUiSchema) || {},\n    propType: 'card',\n    schema: {},\n    uischema: {},\n    neighborNames: [],\n  }: ElementProps);\n\n  if (index !== undefined && index !== null) {\n    newElementObjArr.splice(index + 1, 0, newElement);\n  } else {\n    newElementObjArr.push(newElement);\n  }\n  updateSchemas(newElementObjArr, {\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    onChange,\n  });\n}\n\n// given an initial schema, update with a new section appended\nexport function addSectionObj(parameters: {\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  onChange: ({ [string]: any }, { [string]: any }) => any,\n  definitionData: { [string]: any },\n  definitionUi: { [string]: any },\n  index?: number,\n  categoryHash: { [string]: string },\n}) {\n  const {\n    schema,\n    uischema,\n    onChange,\n    definitionData,\n    definitionUi,\n    index,\n    categoryHash,\n  } = parameters;\n  const newElementObjArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  const i = getIdFromElementsBlock(newElementObjArr);\n\n  const newElement = ({\n    name: `${DEFAULT_INPUT_NAME}${i}`,\n    required: false,\n    dataOptions: {\n      title: `New Input ${i}`,\n      type: 'object',\n      default: '',\n    },\n    uiOptions: {},\n    propType: 'section',\n    schema: { title: `New Input ${i}`, type: 'object' },\n    uischema: {},\n    neighborNames: [],\n  }: ElementProps);\n\n  if (index !== undefined && index !== null) {\n    newElementObjArr.splice(index + 1, 0, newElement);\n  } else {\n    newElementObjArr.push(newElement);\n  }\n  updateSchemas(newElementObjArr, {\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    onChange,\n  });\n}\n\n// generate an array of Card and Section components from a schema\nexport function generateElementComponentsFromSchemas(parameters: {\n  schemaData: { [string]: any },\n  uiSchemaData: { [string]: any },\n  onChange: ({ [string]: any }, { [string]: any }) => any,\n  definitionData?: { [string]: any },\n  definitionUi?: { [string]: any },\n  hideKey?: boolean,\n  path: string,\n  cardOpenArray: Array<boolean>,\n  setCardOpenArray: (newArr: Array<boolean>) => void,\n  allFormInputs: { [string]: FormInput },\n  mods?: Mods,\n  categoryHash: { [string]: string },\n  Card: React.AbstractComponent<{ [string]: any }>,\n  Section: React.AbstractComponent<{ [string]: any }>,\n}): Node[] {\n  const {\n    schemaData,\n    uiSchemaData,\n    onChange,\n    definitionData,\n    definitionUi,\n    hideKey,\n    path,\n    cardOpenArray,\n    setCardOpenArray,\n    allFormInputs,\n    mods,\n    categoryHash,\n    Card,\n    Section,\n  } = parameters;\n\n  const schema = parse(stringify(schemaData));\n  const uischema = parse(stringify(uiSchemaData));\n\n  if (!schema.properties) return [];\n  const elementPropArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  const elementList = elementPropArr.map((elementProp, index) => {\n    const expanded =\n      (cardOpenArray && index < cardOpenArray.length && cardOpenArray[index]) ||\n      false;\n    if (elementProp.propType === 'card') {\n      // choose the appropriate type specific parameters\n      const TypeSpecificParameters = getCardParameterInputComponentForType(\n        elementProp.dataOptions.category || 'string',\n        allFormInputs,\n      );\n\n      // add a fully defined card component to the list of components\n      return (\n        <Card\n          componentProps={Object.assign(\n            {\n              name: elementPropArr[index].name,\n              required: elementPropArr[index].required,\n              hideKey,\n              path: `${path}_${elementPropArr[index].name}`,\n              definitionData,\n              definitionUi,\n              neighborNames: elementPropArr[index].neighborNames,\n              dependents: elementPropArr[index].dependents,\n              dependent: elementPropArr[index].dependent,\n              parent: elementPropArr[index].parent,\n            },\n            elementPropArr[index].uiOptions,\n            elementPropArr[index].dataOptions,\n          )}\n          key={`${path}_${elementPropArr[index].name}`}\n          TypeSpecificParameters={TypeSpecificParameters}\n          onChange={(newCardObj: { [string]: any }) => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n\n            // extract uiOptions and other properties\n            const newDataProps = {};\n            const newUiProps = {};\n            Object.keys(newCardObj).forEach((propName) => {\n              if (propName.startsWith('ui:')) {\n                if (propName.startsWith('ui:*')) {\n                  newUiProps[propName.substring(4)] = newCardObj[propName];\n                } else {\n                  newUiProps[propName] = newCardObj[propName];\n                }\n              } else if (\n                ![\n                  'name',\n                  'required',\n                  'neighborNames',\n                  'dependents',\n                  'dependent',\n                  'parent',\n                ].includes(propName)\n              ) {\n                newDataProps[propName] = newCardObj[propName];\n              }\n            });\n\n            if (newElementObjArr[index].propType === 'card') {\n              const oldElement = newElementObjArr[index];\n              newElementObjArr[index] = {\n                ...oldElement,\n                dataOptions: newDataProps,\n                uiOptions: newUiProps,\n                required: newCardObj.required,\n                dependents: newCardObj.dependents,\n                dependent: newCardObj.dependent,\n                parent: newCardObj.parent,\n                name: newCardObj.name,\n                $ref: newCardObj.$ref,\n                propType: 'card',\n              };\n            } else {\n              throw new Error('Card editing non card element');\n            }\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onDelete={() => {\n            // splice out this index from the card array\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr.splice(index, 1);\n            setCardOpenArray([\n              ...cardOpenArray.slice(0, index),\n              ...cardOpenArray.slice(index + 1),\n            ]);\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveUp={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === 0) return;\n\n            const tempBlock = newElementObjArr[index - 1];\n            newElementObjArr[index - 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveDown={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === elementPropArr.length - 1) return;\n\n            const tempBlock = newElementObjArr[index + 1];\n            newElementObjArr[index + 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          addElem={(choice: string) => {\n            if (choice === 'card') {\n              addCardObj({\n                schema,\n                uischema,\n                mods,\n                onChange,\n                definitionData: definitionData || {},\n                definitionUi: definitionUi || {},\n                index,\n                categoryHash,\n              });\n            } else if (choice === 'section') {\n              addSectionObj({\n                schema,\n                uischema,\n                onChange,\n                definitionData: definitionData || {},\n                definitionUi: definitionUi || {},\n                index,\n                categoryHash,\n              });\n            }\n            setCardOpenArray([...cardOpenArray, false]);\n          }}\n          cardOpen={expanded}\n          setCardOpen={(newState: boolean) =>\n            setCardOpenArray([\n              ...cardOpenArray.slice(0, index),\n              newState,\n              ...cardOpenArray.slice(index + 1),\n            ])\n          }\n          allFormInputs={allFormInputs}\n          mods={mods}\n        />\n      );\n    } else if (elementProp.propType === 'section') {\n      // create a section with the appropriate schemas here\n      return (\n        <Section\n          schema={elementProp.schema}\n          uischema={elementProp.uischema}\n          onChange={(\n            newSchema: { [string]: any },\n            newUiSchema: { [string]: any },\n            newRef?: string,\n          ) => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n\n            const oldSection = newElementObjArr[index];\n\n            newElementObjArr[index] = {\n              ...oldSection,\n              schema: newSchema,\n              uischema: newUiSchema,\n              propType: 'section',\n            };\n\n            if (newRef) newElementObjArr[index].$ref = newRef;\n\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onNameChange={(newName: string) => {\n            const oldSection = elementProp;\n\n            // check if newName overlaps with an existing name\n            if (elementPropArr.map((elem) => elem.name).includes(newName))\n              return;\n\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr[index] = {\n              ...oldSection,\n              name: newName,\n            };\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onRequireToggle={() => {\n            const oldSection = elementProp;\n\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr[index] = {\n              ...oldSection,\n              required: !oldSection.required,\n            };\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onDependentsChange={(\n            newDependents: Array<{\n              children: Array<string>,\n              value?: any,\n            }>,\n          ) => {\n            const oldSection = elementProp;\n\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr[index] = {\n              ...oldSection,\n              dependents: newDependents,\n            };\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              onChange,\n              definitionData,\n              definitionUi,\n            });\n          }}\n          onDelete={() => {\n            // splice out this index from the card array\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr.splice(index, 1);\n            setCardOpenArray([\n              ...cardOpenArray.slice(0, index),\n              ...cardOpenArray.slice(index + 1),\n            ]);\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveUp={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === 0) return;\n\n            const tempBlock = newElementObjArr[index - 1];\n            newElementObjArr[index - 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveDown={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === elementPropArr.length - 1) return;\n\n            const tempBlock = newElementObjArr[index + 1];\n            newElementObjArr[index + 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          name={elementProp.name}\n          key={`${path}_${elementPropArr[index].name}`}\n          required={elementProp.required}\n          path={`${path}_${elementProp.name}`}\n          definitionData={definitionData || {}}\n          definitionUi={definitionUi || {}}\n          hideKey={hideKey}\n          reference={elementProp.$ref}\n          neighborNames={elementProp.neighborNames}\n          dependents={elementProp.dependents}\n          dependent={elementProp.dependent}\n          parent={elementProp.parent}\n          addElem={(choice: string) => {\n            if (choice === 'card') {\n              addCardObj({\n                schema,\n                uischema,\n                mods,\n                onChange,\n                definitionData: definitionData || {},\n                definitionUi: definitionUi || {},\n                index,\n                categoryHash,\n              });\n            } else if (choice === 'section') {\n              addSectionObj({\n                schema,\n                uischema,\n                onChange,\n                definitionData: definitionData || {},\n                definitionUi: definitionUi || {},\n                index,\n                categoryHash,\n              });\n            }\n            setCardOpenArray([...cardOpenArray, false]);\n          }}\n          cardOpen={expanded}\n          setCardOpen={(newState: boolean) =>\n            setCardOpenArray([\n              ...cardOpenArray.slice(0, index),\n              newState,\n              ...cardOpenArray.slice(index + 1),\n            ])\n          }\n          allFormInputs={allFormInputs}\n          categoryHash={categoryHash}\n          mods={mods}\n        />\n      );\n    } else {\n      return (\n        <div>\n          <h2> Error parsing element </h2>\n        </div>\n      );\n    }\n  });\n\n  return elementList;\n}\n\n// function called when drag and drop ends\nexport function onDragEnd(\n  result: any,\n  details: {\n    schema: { [string]: any },\n    uischema: { [string]: any },\n    onChange: ({ [string]: any }, { [string]: any }) => any,\n    definitionData?: { [string]: any },\n    definitionUi?: { [string]: any },\n    categoryHash: { [string]: string },\n  },\n) {\n  const {\n    schema,\n    uischema,\n    onChange,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  } = details;\n  const src = result.source.index;\n  const dest = result.destination.index;\n  const newElementObjArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  const tempBlock = newElementObjArr[src];\n  newElementObjArr[src] = newElementObjArr[dest];\n  newElementObjArr[dest] = tempBlock;\n\n  updateSchemas(newElementObjArr, {\n    schema,\n    uischema,\n    definitionData: definitionData || {},\n    definitionUi: definitionUi || {},\n    onChange,\n  });\n}\n\n// helper function to recursively update sections\nfunction propagateElementChange(\n  elementArr: Array<ElementProps>,\n  definitionData: { [string]: any },\n  definitionUi: { [string]: any },\n  categoryHash: { [string]: string },\n) {\n  const updatedElementArr = [];\n  elementArr.forEach((element) => {\n    // update section and it's children\n    if (element.propType === 'section') {\n      const childrenElements = generateElementPropsFromSchemas({\n        schema: element.schema,\n        uischema: element.uischema,\n        definitionData,\n        definitionUi,\n        categoryHash,\n      });\n      const updatedChildren = propagateElementChange(\n        childrenElements,\n        definitionData,\n        definitionUi,\n        categoryHash,\n      );\n      const newUiSchema = Object.assign(\n        { ...element.uischema },\n        generateSchemaFromElementProps(updatedChildren),\n      );\n      const newSchema = Object.assign(\n        { ...element.schema },\n        generateSchemaFromElementProps(updatedChildren),\n      );\n      const newElement = {\n        ...element,\n        schema: newSchema,\n        uischema: newUiSchema,\n      };\n      updatedElementArr.push(newElement);\n    } else {\n      updatedElementArr.push(element);\n    }\n  });\n  return updatedElementArr;\n}\n\n// propogate changes in a schema and ui schema with updated definitions but outdated body componenents\nexport function propagateDefinitionChanges(\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  onChange: ({ [string]: any }, { [string]: any }) => void,\n  categoryHash: { [string]: string },\n) {\n  const definitionData = schema.definitions;\n  const definitionUi = uischema.definitions;\n  const bodyElements = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n  const updatedBodyElements = propagateElementChange(\n    bodyElements,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  );\n\n  updateSchemas(updatedBodyElements, {\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    onChange,\n  });\n}\n\n// Member-wise subtraction of array2 from array1\nexport function subtractArray(\n  array1: Array<string>,\n  array2?: Array<string>,\n): Array<string> {\n  if (array2 === undefined || array2 === null) return array1;\n\n  const keys = array2.reduce((acc, curr) => {\n    acc[curr] = true;\n    return acc;\n  }, {});\n\n  return array1.filter((v) => !keys[v]);\n}\n\nexport function excludeKeys(\n  obj: { [string]: any },\n  keys: ?(string[]),\n): { [string]: any } {\n  if (!keys) return { ...obj };\n\n  const keysHash = keys.reduce((acc, curr) => {\n    acc[curr] = true;\n    return acc;\n  }, {});\n\n  return Object.keys(obj).reduce(\n    (acc, curr) => (keysHash[curr] ? acc : { ...acc, [curr]: obj[curr] }),\n    {},\n  );\n}\n\nexport function getNewElementDefaultDataOptions(\n  i: number,\n  mods?: Mods,\n): DataOptions {\n  if (mods && mods.newElementDefaultDataOptions !== undefined) {\n    const title = `${mods.newElementDefaultDataOptions.title} ${i}`;\n    return { ...mods.newElementDefaultDataOptions, ...{ title: title } };\n  } else {\n    return {\n      title: `New Input ${i}`,\n      type: 'string',\n      default: '',\n    };\n  }\n}\n\nexport function getRandomId(): string {\n  const chars = [\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    'g',\n    'h',\n    'i',\n    'j',\n    'k',\n    'l',\n    'm',\n    'n',\n    'o',\n    'p',\n    'q',\n    'r',\n    's',\n    't',\n    'u',\n    'v',\n    'w',\n    'x',\n    'y',\n    'z',\n  ];\n  const numberOfChars = chars.length;\n  const randomIdLength = 50;\n\n  return Array.from({ length: randomIdLength })\n    .map(() => chars[Math.floor(Math.random() * numberOfChars)])\n    .join('');\n}\n","// @flow\n\nimport React, { useState } from 'react';\nimport { getRandomId } from '../utils';\nimport Tooltip from '../Tooltip';\nimport type { Node } from 'react';\n\n// warning message if not all possibilities specified\nexport default function DependencyWarning({\n  parameters,\n}: {\n  parameters: {\n    [string]: any,\n    name?: string,\n    dependents?: Array<{\n      children: Array<string>,\n      value?: any,\n    }>,\n    type?: string,\n    enum?: Array<string | number>,\n    neighborNames?: Array<string>,\n    schema?: string,\n  },\n}): Node {\n  const [elementId] = useState(getRandomId());\n  if (\n    parameters.enum &&\n    parameters.dependents &&\n    parameters.dependents.length &&\n    parameters.dependents[0].value\n  ) {\n    // get the set of defined enum values\n    const definedVals = new Set([]);\n    (parameters.dependents || []).forEach((possibility) => {\n      if (possibility.value && possibility.value.enum)\n        possibility.value.enum.forEach((val) => definedVals.add(val));\n    });\n    const undefinedVals = [];\n    if (Array.isArray(parameters.enum))\n      parameters.enum.forEach((val) => {\n        if (!definedVals.has(val)) undefinedVals.push(val);\n      });\n    if (undefinedVals.length === 0) return null;\n    return (\n      <React.Fragment>\n        <p>\n          Warning! The following values do not have associated dependency\n          values:{' '}\n          <Tooltip\n            id={`${elementId}_valuewarning`}\n            type='help'\n            text='Each possible value for a value-based dependency must be defined to work properly'\n          />\n        </p>\n\n        <ul>\n          {undefinedVals.map((val, index) => (\n            <li key={index}>{val}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  return null;\n}\n","// @flow\n\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport FontAwesomeIcon from '../FontAwesomeIcon';\nimport { getRandomId } from '../utils';\nimport type { Node } from 'react';\n\n// a field that lets you choose adjacent blocks\nexport default function CardSelector({\n  possibleChoices,\n  chosenChoices,\n  onChange,\n  placeholder,\n  path,\n}: {\n  possibleChoices: Array<string>,\n  chosenChoices: Array<string>,\n  onChange: (chosenChoices: Array<string>) => void,\n  placeholder: string,\n  path: string,\n}): Node {\n  const [elementId] = useState(getRandomId());\n  return (\n    <React.Fragment>\n      <ul>\n        {chosenChoices.map((chosenChoice, index) => (\n          <li key={`${elementId}_neighbor_${index}`}>\n            {chosenChoice}{' '}\n            <FontAwesomeIcon\n              icon={faTimes}\n              onClick={() =>\n                onChange([\n                  ...chosenChoices.slice(0, index),\n                  ...chosenChoices.slice(index + 1),\n                ])\n              }\n            />\n          </li>\n        ))}\n      </ul>\n      <Select\n        value={{\n          value: '',\n          label: '',\n        }}\n        placeholder={placeholder}\n        options={possibleChoices\n          .filter((choice) => !chosenChoices.includes(choice))\n          .map((choice) => ({\n            value: choice,\n            label: choice,\n          }))}\n        onChange={(val: any) => {\n          onChange([...chosenChoices, val.value]);\n        }}\n        className='card-modal-select'\n      />\n    </React.Fragment>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport { Input } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport FontAwesomeIcon from './FontAwesomeIcon';\nimport type { Node } from 'react';\n\nconst useStyles = createUseStyles({\n  cardEnumOption: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    marginBottom: '.5em',\n    '& input': { width: '80%', marginRight: '1em', marginBottom: 0 },\n    '& .delete-button': {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n    },\n  },\n});\n\n// Input field corresponding to an array of values, add and remove\nexport default function CardEnumOptions({\n  initialValues,\n  names,\n  showNames,\n  onChange,\n  type,\n}: {\n  initialValues: Array<any>,\n  names?: Array<string>,\n  showNames: boolean,\n  onChange: (newEnums: Array<any>, newEnumNames?: Array<string>) => void,\n  type: string,\n}): Node {\n  const classes = useStyles();\n\n  const possibleValues = [];\n  for (let index = 0; index < initialValues.length; index += 1) {\n    const value = initialValues[index];\n    let name = `${value}`;\n    if (names && index < names.length) name = names[index];\n    possibleValues.push(\n      <div key={index} className={classes.cardEnumOption}>\n        <Input\n          value={value === undefined || value === null ? '' : value}\n          placeholder='Possible Value'\n          key={`val-${index}`}\n          type={type === 'string' ? 'text' : 'number'}\n          onChange={(ev: any) => {\n            let newVal;\n            switch (type) {\n              case 'string':\n                newVal = ev.target.value;\n                break;\n              case 'number':\n              case 'integer':\n                newVal = parseFloat(ev.target.value);\n                if (Number.isInteger(newVal))\n                  newVal = parseInt(ev.target.value, 10);\n                if (Number.isNaN(newVal)) newVal = type === 'string' ? '' : 0;\n                break;\n              default:\n                throw new Error(`Enum called with unknown type ${type}`);\n            }\n            onChange(\n              [\n                ...initialValues.slice(0, index),\n                newVal,\n                ...initialValues.slice(index + 1),\n              ],\n              names,\n            );\n          }}\n          className='card-text'\n        />\n        <Input\n          value={name || ''}\n          placeholder='Label'\n          key={`name-${index}`}\n          type='text'\n          onChange={(ev: any) => {\n            if (names)\n              onChange(initialValues, [\n                ...names.slice(0, index),\n                ev.target.value,\n                ...names.slice(index + 1),\n              ]);\n          }}\n          className='card-text'\n          style={{ display: showNames ? 'initial' : 'none' }}\n        />\n        <div className='delete-button'>\n          <FontAwesomeIcon\n            icon={faTimes}\n            onClick={() => {\n              // remove this value\n              onChange(\n                [\n                  ...initialValues.slice(0, index),\n                  ...initialValues.slice(index + 1),\n                ],\n                names\n                  ? [...names.slice(0, index), ...names.slice(index + 1)]\n                  : undefined,\n              );\n            }}\n          />\n        </div>\n      </div>,\n    );\n  }\n\n  return (\n    <React.Fragment>\n      {possibleValues}\n      <FontAwesomeIcon\n        icon={faPlus}\n        onClick={() => {\n          // add a new dropdown option\n          onChange(\n            [...initialValues, type === 'string' ? '' : 0],\n            names ? [...names, ''] : undefined,\n          );\n        }}\n      />\n    </React.Fragment>\n  );\n}\n","// @flow\n\nimport React, { useState } from 'react';\nimport { Input } from 'reactstrap';\nimport { faTimes, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport CardEnumOptions from '../CardEnumOptions';\nimport CardSelector from './CardSelector';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport FontAwesomeIcon from '../FontAwesomeIcon';\nimport { getRandomId } from '../utils';\nimport type { Node } from 'react';\n\n// handle value options for different card types\nexport default function ValueSelector({\n  possibility,\n  onChange,\n  parentEnums,\n  parentType,\n  parentName,\n  parentSchema,\n  path,\n}: {\n  possibility: {\n    children: Array<string>,\n    value: any,\n  },\n  onChange: (newPossibility: {\n    children: Array<string>,\n    value?: any,\n  }) => void,\n  parentEnums?: Array<string | number>,\n  parentType?: string,\n  parentName?: string,\n  parentSchema?: any,\n  path: string,\n}): Node {\n  const [elementId] = useState(getRandomId());\n  if (possibility.value) {\n    // enum type\n    if (parentEnums) {\n      const enumType = typeof parentEnums[0] === 'number' ? 'number' : 'string';\n      if (enumType === 'string')\n        return (\n          <CardSelector\n            possibleChoices={parentEnums.map((val) => `${val}`)}\n            chosenChoices={possibility.value.enum}\n            onChange={(chosenChoices: Array<string>) =>\n              onChange({ ...possibility, value: { enum: chosenChoices } })\n            }\n            placeholder='Allowed value'\n            path={path}\n          />\n        );\n      if (enumType === 'number')\n        return (\n          <CardSelector\n            possibleChoices={parentEnums.map((val) => `${val}`)}\n            chosenChoices={possibility.value.enum}\n            onChange={(chosenChoices: Array<string>) =>\n              onChange({\n                ...possibility,\n                value: {\n                  enum: chosenChoices.map((val) => Number.parseFloat(val)),\n                },\n              })\n            }\n            placeholder='Allowed value'\n            path={path}\n          />\n        );\n    }\n    // check box type\n    if (parentType === 'boolean') {\n      return (\n        <FBCheckbox\n          onChangeValue={() => {\n            if (possibility.value.enum && possibility.value.enum[0]) {\n              onChange({\n                ...possibility,\n                value: { enum: [false] },\n              });\n            } else {\n              onChange({\n                ...possibility,\n                value: { enum: [true] },\n              });\n            }\n          }}\n          isChecked={possibility.value.enum && possibility.value.enum[0]}\n          label={parentName}\n        />\n      );\n    }\n    // object type\n    if (parentType === 'object') {\n      const enumArr = (possibility.value.enum: Array<any>);\n\n      return (\n        <div>\n          {enumArr.map((combination, index) => (\n            <li key={`${elementId}_possibleValue${index}`}>\n              {Object.keys(combination).map((key) => {\n                const val = combination[key];\n                return (\n                  <div key={key}>\n                    <h5>{key}:</h5>\n                    {\n                      {\n                        string: (\n                          <Input\n                            value={val || ''}\n                            placeholder='String value'\n                            type='string'\n                            onChange={(ev: any) => {\n                              const newVal = ev.target.value;\n                              const oldCombo = possibility.value.enum[index];\n                              onChange({\n                                ...possibility,\n                                value: {\n                                  enum: [\n                                    ...enumArr.slice(0, index),\n                                    { ...oldCombo, [key]: newVal },\n                                    ...enumArr.slice(index + 1),\n                                  ],\n                                },\n                              });\n                            }}\n                            className='card-modal-text'\n                          />\n                        ),\n                        number: (\n                          <Input\n                            value={val || ''}\n                            placeholder='Number value'\n                            type='number'\n                            onChange={(ev: any) => {\n                              const newVal = Number.parseFloat(ev.target.value);\n                              const oldCombo = possibility.value.enum[index];\n                              onChange({\n                                ...possibility,\n                                value: {\n                                  enum: [\n                                    ...enumArr.slice(0, index),\n                                    { ...oldCombo, [key]: newVal },\n                                    ...enumArr.slice(index + 1),\n                                  ],\n                                },\n                              });\n                            }}\n                            className='card-modal-number'\n                          />\n                        ),\n                        array: (\n                          <Input\n                            value={JSON.stringify(val) || ''}\n                            placeholder='Array in JSON'\n                            type='string'\n                            onChange={(ev: any) => {\n                              let newVal = val;\n                              try {\n                                newVal = JSON.parse(ev.target.value);\n                              } catch (error) {\n                                // eslint-disable-next-line no-console\n                                console.error('invalid JSON array input');\n                              }\n                              const oldCombo = possibility.value.enum[index];\n                              onChange({\n                                ...possibility,\n                                value: {\n                                  enum: [\n                                    ...enumArr.slice(0, index),\n                                    { ...oldCombo, [key]: newVal },\n                                    ...enumArr.slice(index + 1),\n                                  ],\n                                },\n                              });\n                            }}\n                            className='card-modal-text'\n                          />\n                        ),\n                        object: (\n                          <Input\n                            value={JSON.stringify(val) || ''}\n                            placeholder='Object in JSON'\n                            type='string'\n                            onChange={(ev: any) => {\n                              let newVal = val;\n                              try {\n                                newVal = JSON.parse(ev.target.value);\n                              } catch (error) {\n                                // eslint-disable-next-line no-console\n                                console.error('invalid JSON object input');\n                              }\n                              const oldCombo = possibility.value.enum[index];\n                              onChange({\n                                ...possibility,\n                                value: {\n                                  enum: [\n                                    ...enumArr.slice(0, index),\n                                    { ...oldCombo, [key]: newVal },\n                                    ...enumArr.slice(index + 1),\n                                  ],\n                                },\n                              });\n                            }}\n                            className='card-modal-text'\n                          />\n                        ),\n                      }[typeof val]\n                    }\n                  </div>\n                );\n              })}\n              <FontAwesomeIcon\n                icon={faTimes}\n                onClick={() =>\n                  onChange({\n                    ...possibility,\n                    value: {\n                      enum: [\n                        ...enumArr.slice(0, index),\n                        ...enumArr.slice(index + 1),\n                      ],\n                    },\n                  })\n                }\n              />\n            </li>\n          ))}\n          <FontAwesomeIcon\n            icon={faPlus}\n            onClick={() => {\n              const newCase = {};\n              const propArr = parentSchema ? parentSchema.properties : {};\n              Object.keys(propArr).forEach((key) => {\n                if (\n                  propArr[key].type === 'number' ||\n                  propArr[key].type === 'integer'\n                ) {\n                  newCase[key] = 0;\n                } else if (propArr[key].type === 'array' || propArr[key].enum) {\n                  newCase[key] = [];\n                } else if (\n                  propArr[key].type === 'object' ||\n                  propArr[key].properties\n                ) {\n                  newCase[key] = {};\n                } else {\n                  newCase[key] = '';\n                }\n              });\n              onChange({\n                ...possibility,\n                value: { enum: [...enumArr, newCase] },\n              });\n            }}\n          />\n        </div>\n      );\n    }\n    return (\n      <CardEnumOptions\n        initialValues={possibility.value.enum}\n        onChange={(newEnum: Array<any>) =>\n          onChange({ ...possibility, value: { enum: newEnum } })\n        }\n        type={parentType || 'string'}\n        showNames={false}\n      />\n    );\n  } else {\n    return <h5> Appear if defined </h5>;\n  }\n}\n","// @flow\n\nimport React, { useState } from 'react';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport Tooltip from '../Tooltip';\nimport CardSelector from './CardSelector';\nimport ValueSelector from './ValueSelector';\nimport FontAwesomeIcon from '../FontAwesomeIcon';\nimport { getRandomId } from '../utils';\nimport type { Node } from 'react';\n\n// a possible dependency\nexport default function DependencyPossibility({\n  possibility,\n  neighborNames,\n  path,\n  onChange,\n  onDelete,\n  parentEnums,\n  parentType,\n  parentName,\n  parentSchema,\n}: {\n  possibility: {\n    children: Array<string>,\n    value?: any,\n  },\n  neighborNames: Array<string>,\n  path: string,\n  onChange: (newPossibility: {\n    children: Array<string>,\n    value?: any,\n  }) => void,\n  onDelete: () => void,\n  parentEnums?: Array<string | number>,\n  parentType?: string,\n  parentName?: string,\n  parentSchema?: any,\n}): Node {\n  const [elementId] = useState(getRandomId());\n  return (\n    <div className='form-dependency-condition'>\n      <h5>\n        Display the following:{' '}\n        <Tooltip\n          id={`${elementId}_bulk`}\n          type='help'\n          text='Choose the other form elements that depend on this one'\n        />\n      </h5>\n      <CardSelector\n        possibleChoices={\n          neighborNames.filter((name) => name !== parentName) || []\n        }\n        chosenChoices={possibility.children}\n        onChange={(chosenChoices: Array<string>) =>\n          onChange({ ...possibility, children: [...chosenChoices] })\n        }\n        placeholder='Choose a dependent...'\n        path={path}\n      />\n      <h5>\n        If \"{parentName}\" has {possibility.value ? 'the value:' : 'a value.'}\n      </h5>\n      <div style={{ display: possibility.value ? 'block' : 'none' }}>\n        <ValueSelector\n          possibility={possibility}\n          onChange={(newPossibility: {\n            children: Array<string>,\n            value?: any,\n          }) => onChange(newPossibility)}\n          parentEnums={parentEnums}\n          parentType={parentType}\n          parentName={parentName}\n          parentSchema={parentSchema}\n          path={path}\n        />\n      </div>\n      <FontAwesomeIcon icon={faTimes} onClick={() => onDelete()} />\n    </div>\n  );\n}\n","// @flow\n\nimport React, { useState } from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport FBRadioGroup from '../radio/FBRadioGroup';\nimport Tooltip from '../Tooltip';\nimport DependencyWarning from './DependencyWarning';\nimport DependencyPossibility from './DependencyPossibility';\nimport FontAwesomeIcon from '../FontAwesomeIcon';\nimport { getRandomId } from '../utils';\nimport type { Node } from 'react';\n\nconst useStyles = createUseStyles({\n  dependencyField: {\n    '& .fa': { cursor: 'pointer' },\n    '& .plus': { marginLeft: '1em' },\n    '& h4': { marginBottom: '.5em' },\n    '& h5': { fontSize: '1em' },\n    '& .form-dependency-select': { fontSize: '0.75em', marginBottom: '1em' },\n    '& .form-dependency-conditions': {\n      textAlign: 'left',\n      '& .form-dependency-condition': {\n        padding: '1em',\n        border: '1px solid gray',\n        borderRadius: '4px',\n        margin: '1em',\n        '& *': { textAlign: 'initial' },\n      },\n    },\n    '& p': { fontSize: '0.75em' },\n    '& .fb-radio-button': {\n      display: 'block',\n    },\n  },\n});\n\n// checks whether an array corresponds to oneOf dependencies\nfunction checkIfValueBasedDependency(\n  dependents: Array<{\n    children: Array<string>,\n    value?: any,\n  }>,\n) {\n  let valueBased = true;\n  if (dependents && Array.isArray(dependents) && dependents.length > 0) {\n    dependents.forEach((possibility) => {\n      if (!possibility.value || !possibility.value.enum) {\n        valueBased = false;\n      }\n    });\n  } else {\n    valueBased = false;\n  }\n\n  return valueBased;\n}\n\ntype DependencyParams = {\n  [string]: any,\n  name?: string,\n  dependents?: Array<{\n    children: Array<string>,\n    value?: any,\n  }>,\n  type?: string,\n  enum?: Array<string | number>,\n  neighborNames?: Array<string>,\n  schema?: any,\n};\n\nexport default function DependencyField({\n  parameters,\n  onChange,\n}: {\n  parameters: DependencyParams,\n  onChange: (newParams: DependencyParams) => void,\n}): Node {\n  const [elementId] = useState(getRandomId());\n  const classes = useStyles();\n  const valueBased = checkIfValueBasedDependency(parameters.dependents || []);\n  return (\n    <div className={`form-dependency ${classes.dependencyField}`}>\n      <h4>\n        Dependencies{' '}\n        <Tooltip\n          id={`${elementId}_dependent`}\n          type='help'\n          text='Control whether other form elements show based on this one'\n        />\n      </h4>\n      {!!parameters.dependents && parameters.dependents.length > 0 && (\n        <React.Fragment>\n          <FBRadioGroup\n            defaultValue={valueBased ? 'value' : 'definition'}\n            horizontal={false}\n            options={[\n              {\n                value: 'definition',\n                label: 'Any value dependency',\n              },\n              {\n                value: 'value',\n                label: (\n                  <React.Fragment>\n                    Specific value dependency{' '}\n                    <Tooltip\n                      id={`${elementId}_valuebased`}\n                      type='help'\n                      text=\"Specify whether these elements should show based on this element's value\"\n                    />\n                  </React.Fragment>\n                ),\n              },\n            ]}\n            onChange={(selection) => {\n              if (parameters.dependents) {\n                const newDependents = [...parameters.dependents];\n                if (selection === 'definition') {\n                  parameters.dependents.forEach((possibility, index) => {\n                    newDependents[index] = {\n                      ...possibility,\n                      value: undefined,\n                    };\n                  });\n                } else {\n                  parameters.dependents.forEach((possibility, index) => {\n                    newDependents[index] = {\n                      ...possibility,\n                      value: { enum: [] },\n                    };\n                  });\n                }\n                onChange({\n                  ...parameters,\n                  dependents: newDependents,\n                });\n              }\n            }}\n          />\n        </React.Fragment>\n      )}\n      <DependencyWarning parameters={parameters} />\n      <div className='form-dependency-conditions'>\n        {parameters.dependents\n          ? parameters.dependents.map((possibility, index) => (\n              <DependencyPossibility\n                possibility={possibility}\n                neighborNames={parameters.neighborNames || []}\n                parentEnums={parameters.enum}\n                parentType={parameters.type}\n                parentName={parameters.name}\n                parentSchema={parameters.schema}\n                path={parameters.path}\n                key={`${elementId}_possibility${index}`}\n                onChange={(newPossibility: {\n                  children: Array<string>,\n                  value?: any,\n                }) => {\n                  const newDependents = parameters.dependents\n                    ? [...parameters.dependents]\n                    : [];\n                  newDependents[index] = newPossibility;\n                  onChange({\n                    ...parameters,\n                    dependents: newDependents,\n                  });\n                }}\n                onDelete={() => {\n                  const newDependents = parameters.dependents\n                    ? [...parameters.dependents]\n                    : [];\n                  onChange({\n                    ...parameters,\n                    dependents: [\n                      ...newDependents.slice(0, index),\n                      ...newDependents.slice(index + 1),\n                    ],\n                  });\n                }}\n              />\n            ))\n          : ''}\n\n        <span className='plus' id={`${elementId}_adddependency`}>\n          <FontAwesomeIcon\n            icon={faPlus}\n            onClick={() => {\n              const newDependents = parameters.dependents\n                ? [...parameters.dependents]\n                : [];\n              newDependents.push({\n                children: [],\n                value: valueBased ? { enum: [] } : undefined,\n              });\n              onChange({\n                ...parameters,\n                dependents: newDependents,\n              });\n            }}\n          />\n        </span>\n        <UncontrolledTooltip\n          placement='top'\n          target={`${elementId}_adddependency`}\n        >\n          Add another dependency relation linking this element and other form\n          elements\n        </UncontrolledTooltip>\n      </div>\n    </div>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport {\n  Modal,\n  ModalHeader,\n  Button,\n  ModalBody,\n  ModalFooter,\n  Input,\n} from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport DependencyField from './dependencies/DependencyField';\nimport type { Node } from 'react';\nimport type { Parameters } from './types';\nimport Tooltip from './Tooltip';\n\nconst useStyles = createUseStyles({\n  cardModal: {\n    '& .card-modal-header': { paddingTop: '.5em', paddingBottom: '.5em' },\n    '& .card-modal-entries': { padding: '1em' },\n    '& h4, h5, p, label, li': { marginTop: '.5em', marginBottom: '.5em' },\n    '& h5, p, label, li': { fontSize: '14px' },\n    '& h4': { fontSize: '16px' },\n    '& h3': { fontSize: '18px', marginBottom: 0 },\n    '& .card-modal-entries > div > input': {\n      marginBottom: '1em',\n      height: '32px',\n    },\n    '& .fa-question-circle': { color: 'var(--gray)' },\n    '& .card-modal-boolean': {\n      '& *': { marginRight: '0.25em', height: 'auto', display: 'inline-block' },\n    },\n    '& .card-modal-select': {\n      '& input': { margin: '0', height: '20px' },\n      marginBottom: '1em',\n    },\n  },\n});\n\nexport default function CardModal({\n  componentProps,\n  onChange,\n  isOpen,\n  onClose,\n  TypeSpecificParameters,\n}: {\n  componentProps: {\n    [string]: any,\n  },\n  onChange: (any) => void,\n  isOpen: boolean,\n  onClose: () => void,\n  TypeSpecificParameters: React.AbstractComponent<{\n    parameters: Parameters,\n    onChange: (newParams: Parameters) => void,\n  }>,\n}): Node {\n  const classes = useStyles();\n  // assign state values for parameters that should only change on hitting \"Save\"\n  const [componentPropsState, setComponentProps] =\n    React.useState(componentProps);\n\n  React.useEffect(() => {\n    setComponentProps(componentProps);\n  }, [componentProps]);\n  return (\n    <Modal isOpen={isOpen} data-test='card-modal' className={classes.cardModal}>\n      <ModalHeader className='card-modal-header'>\n        <div style={{ display: componentProps.hideKey ? 'none' : 'initial' }}>\n          <h3>Additional Settings</h3>\n        </div>\n      </ModalHeader>\n      <ModalBody className='card-modal-entries'>\n        <TypeSpecificParameters\n          parameters={componentPropsState}\n          onChange={(newState: any) => {\n            setComponentProps({\n              ...componentPropsState,\n              ...newState,\n            });\n          }}\n        />\n        <div>\n          <h4>\n            Column Size{' '}\n            <a\n              href='https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Basic_Concepts_of_Grid_Layout'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              <Tooltip\n                id='column_size_tooltip'\n                type='help'\n                text='Set the column size of the input'\n              />\n            </a>\n          </h4>\n          <Input\n            value={\n              componentPropsState['ui:column']\n                ? componentPropsState['ui:column']\n                : ''\n            }\n            placeholder='Column size'\n            key='ui:column'\n            type='number'\n            min={0}\n            onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n              setComponentProps({\n                ...componentPropsState,\n                'ui:column': ev.target.value,\n              });\n            }}\n            className='card-modal-text'\n          />\n        </div>\n        <DependencyField\n          parameters={(componentPropsState: { [string]: any })}\n          onChange={(newState: any) => {\n            setComponentProps({\n              ...componentPropsState,\n              ...newState,\n            });\n          }}\n        />\n      </ModalBody>\n      <ModalFooter>\n        <Button\n          onClick={() => {\n            onClose();\n            onChange(componentPropsState);\n          }}\n          color='primary'\n        >\n          Save\n        </Button>\n        <Button\n          onClick={() => {\n            onClose();\n            setComponentProps(componentProps);\n          }}\n          color='secondary'\n        >\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport { getCardBody } from './utils';\nimport type { Node } from 'react';\nimport type { Parameters, Mods, FormInput } from './types';\n\n// specify the inputs required for any type of object\nexport default function GeneralParameterInputs({\n  category,\n  parameters,\n  onChange,\n  mods,\n  allFormInputs,\n}: {\n  category: string,\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n  mods?: Mods,\n  allFormInputs: { [string]: FormInput },\n}): Node {\n  const CardBody = getCardBody(category, allFormInputs);\n  return (\n    <div>\n      <CardBody parameters={parameters} onChange={onChange} mods={mods || {}} />\n    </div>\n  );\n}\n","// @flow\n\nimport React from 'react';\nimport Select from 'react-select';\nimport { Input, FormGroup, FormFeedback } from 'reactstrap';\nimport classnames from 'classnames';\nimport GeneralParameterInputs from './GeneralParameterInputs';\nimport {\n  defaultUiProps,\n  defaultDataProps,\n  categoryToNameMap,\n  categoryType,\n  subtractArray,\n  getRandomId,\n} from './utils';\nimport type { Node } from 'react';\nimport type { Parameters, Mods, FormInput } from './types';\nimport Tooltip from './Tooltip';\n\n// specify the inputs required for any type of object\nexport default function CardGeneralParameterInputs({\n  parameters,\n  onChange,\n  allFormInputs,\n  mods,\n  showObjectNameInput = true,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n  mods?: Mods,\n  allFormInputs: { [string]: FormInput },\n  showObjectNameInput?: boolean,\n}): Node {\n  const [keyState, setKeyState] = React.useState(parameters.name);\n  const [keyError, setKeyError] = React.useState(null);\n  const [titleState, setTitleState] = React.useState(parameters.title);\n  const [descriptionState, setDescriptionState] = React.useState(\n    parameters.description,\n  );\n  const [elementId] = React.useState(getRandomId());\n  const categoryMap = categoryToNameMap(parameters.category, allFormInputs);\n\n  const fetchLabel = (labelName: string, defaultLabel: string): string => {\n    return mods && mods.labels && typeof mods.labels[labelName] === 'string'\n      ? mods.labels[labelName]\n      : defaultLabel;\n  };\n\n  const objectNameLabel = fetchLabel('objectNameLabel', 'Object Name');\n  const displayNameLabel = fetchLabel('displayNameLabel', 'Display Name');\n  const descriptionLabel = fetchLabel('descriptionLabel', 'Description');\n  const inputTypeLabel = fetchLabel('inputTypeLabel', 'Input Type');\n\n  const availableInputTypes = () => {\n    const definitionsInSchema =\n      parameters.definitionData &&\n      Object.keys(parameters.definitionData).length !== 0;\n\n    // Hide the \"Reference\" option if there are no definitions in the schema\n    let inputKeys = Object.keys(categoryMap).filter(\n      (key) => key !== 'ref' || definitionsInSchema,\n    );\n    // Exclude hidden inputs based on mods\n    if (mods) inputKeys = subtractArray(inputKeys, mods.deactivatedFormInputs);\n\n    return inputKeys\n      .map((key) => ({ value: key, label: categoryMap[key] }))\n      .sort((a, b) => a.label.localeCompare(b.label));\n  };\n\n  return (\n    <React.Fragment>\n      <div className='card-entry-row'>\n        {showObjectNameInput && (\n          <div className='card-entry'>\n            <h5>\n              {`${objectNameLabel} `}\n              <Tooltip\n                text={\n                  mods &&\n                  mods.tooltipDescriptions &&\n                  typeof mods.tooltipDescriptions.cardObjectName === 'string'\n                    ? mods.tooltipDescriptions.cardObjectName\n                    : 'The back-end name of the object'\n                }\n                id={`${elementId}_nameinfo`}\n                type='help'\n              />\n            </h5>\n\n            <FormGroup>\n              <Input\n                invalid={keyError !== null}\n                value={keyState || ''}\n                placeholder='Key'\n                type='text'\n                onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n                  setKeyState(ev.target.value)\n                }\n                onBlur={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n                  const { value } = ev.target;\n                  if (\n                    value === parameters.name ||\n                    !(\n                      parameters.neighborNames &&\n                      parameters.neighborNames.includes(value)\n                    )\n                  ) {\n                    setKeyError(null);\n                    onChange({\n                      ...parameters,\n                      name: value,\n                    });\n                  } else {\n                    setKeyState(parameters.name);\n                    setKeyError(`\"${value}\" is already in use.`);\n                    onChange({ ...parameters });\n                  }\n                }}\n                className='card-text'\n              />\n              <FormFeedback>{keyError}</FormFeedback>\n            </FormGroup>\n          </div>\n        )}\n        <div\n          className={`card-entry ${\n            parameters.$ref === undefined ? '' : 'disabled-input'\n          }`}\n        >\n          <h5>\n            {`${displayNameLabel} `}\n            <Tooltip\n              text={\n                mods &&\n                mods.tooltipDescriptions &&\n                typeof mods.tooltipDescriptions.cardDisplayName === 'string'\n                  ? mods.tooltipDescriptions.cardDisplayName\n                  : 'The user-facing name of this object'\n              }\n              id={`${elementId}-titleinfo`}\n              type='help'\n            />\n          </h5>\n          <Input\n            value={titleState || ''}\n            placeholder='Title'\n            type='text'\n            onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n              setTitleState(ev.target.value)\n            }\n            onBlur={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n              onChange({ ...parameters, title: ev.target.value });\n            }}\n            className='card-text'\n          />\n        </div>\n      </div>\n      <div className='card-entry-row'>\n        <div\n          className={`card-entry ${parameters.$ref ? 'disabled-input' : ''}`}\n        >\n          <h5>\n            {`${descriptionLabel} `}\n            <Tooltip\n              text={\n                mods &&\n                mods.tooltipDescriptions &&\n                typeof mods.tooltipDescriptions.cardDescription === 'string'\n                  ? mods.tooltipDescriptions.cardDescription\n                  : 'This will appear as help text on the form'\n              }\n              id={`${elementId}-descriptioninfo`}\n              type='help'\n            />\n          </h5>\n          <FormGroup>\n            <Input\n              value={descriptionState || ''}\n              placeholder='Description'\n              type='text'\n              onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n                setDescriptionState(ev.target.value)\n              }\n              onBlur={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n                onChange({ ...parameters, description: ev.target.value });\n              }}\n              className='card-text'\n            />\n          </FormGroup>\n        </div>\n        <div\n          className={classnames('card-entry', {\n            'wide-card-entry': !showObjectNameInput,\n          })}\n        >\n          <h5>\n            {`${inputTypeLabel} `}\n            <Tooltip\n              text={\n                mods &&\n                mods.tooltipDescriptions &&\n                typeof mods.tooltipDescriptions.cardInputType === 'string'\n                  ? mods.tooltipDescriptions.cardInputType\n                  : 'The type of form input displayed on the form'\n              }\n              id={`${elementId}-inputinfo`}\n              type='help'\n            />\n          </h5>\n          <Select\n            value={{\n              value: parameters.category,\n              label: categoryMap[parameters.category],\n            }}\n            placeholder={inputTypeLabel}\n            options={availableInputTypes()}\n            onChange={(val: any) => {\n              // figure out the new 'type'\n              const newCategory = val.value;\n\n              const newProps = {\n                ...defaultUiProps(newCategory, allFormInputs),\n                ...defaultDataProps(newCategory, allFormInputs),\n                name: parameters.name,\n                required: parameters.required,\n              };\n              if (newProps.$ref !== undefined && !newProps.$ref) {\n                // assign an initial reference\n                const firstDefinition = Object.keys(\n                  parameters.definitionData,\n                )[0];\n                newProps.$ref = `#/definitions/${firstDefinition || 'empty'}`;\n              }\n              onChange({\n                ...newProps,\n                title: newProps.title || parameters.title,\n                default: newProps.default || '',\n                type: newProps.type || categoryType(newCategory, allFormInputs),\n                category: newProps.category || newCategory,\n              });\n            }}\n            className='card-select'\n          />\n        </div>\n      </div>\n\n      <div className='card-category-options'>\n        <GeneralParameterInputs\n          category={parameters.category}\n          parameters={parameters}\n          onChange={onChange}\n          mods={mods}\n          allFormInputs={allFormInputs}\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n","// @flow\n\nimport React, { useState } from 'react';\nimport {\n  Popover,\n  PopoverHeader,\n  PopoverBody,\n  UncontrolledTooltip,\n  Button,\n} from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport FontAwesomeIcon from './FontAwesomeIcon';\nimport FBRadioGroup from './radio/FBRadioGroup';\nimport { getRandomId } from './utils';\nimport type { Node } from 'react';\n\nconst useStyles = createUseStyles({\n  addDetails: {\n    '& .popover': {\n      width: '300px',\n      'z-index': '1051 !important',\n      '& .popover-inner': {\n        border: '1px solid #1d71ad',\n        borderRadius: '4px',\n        '& .popover-header': { borderBottom: '1px solid #1d71ad' },\n        '& .action-buttons': {\n          display: 'flex',\n          justifyContent: 'space-between',\n          marginTop: '.5em',\n        },\n      },\n    },\n  },\n});\n\nexport default function Add({\n  addElem,\n  hidden,\n}: {\n  addElem: (choice: string) => void,\n  hidden?: boolean,\n}): Node {\n  const classes = useStyles();\n  const [popoverOpen, setPopoverOpen] = useState(false);\n  const [createChoice, setCreateChoice] = useState('card');\n  const [elementId] = useState(getRandomId());\n\n  return (\n    <div style={{ display: hidden ? 'none' : 'initial' }}>\n      <span id={`${elementId}_add`}>\n        <FontAwesomeIcon\n          icon={faPlusSquare}\n          onClick={() => setPopoverOpen(true)}\n        />\n      </span>\n      <UncontrolledTooltip placement='top' target={`${elementId}_add`}>\n        Create new form element\n      </UncontrolledTooltip>\n      <Popover\n        placement='bottom'\n        target={`${elementId}_add`}\n        isOpen={popoverOpen}\n        toggle={() => setPopoverOpen(false)}\n        className={`add-details ${classes.addDetails}`}\n        id={`${elementId}_add_popover`}\n      >\n        <PopoverHeader>Create New</PopoverHeader>\n        <PopoverBody>\n          <FBRadioGroup\n            className='choose-create'\n            defaultValue={createChoice}\n            horizontal={false}\n            options={[\n              {\n                value: 'card',\n                label: 'Form element',\n              },\n              {\n                value: 'section',\n                label: 'Form section',\n              },\n            ]}\n            onChange={(selection) => {\n              setCreateChoice(selection);\n            }}\n          />\n          <div className='action-buttons'>\n            <Button onClick={() => setPopoverOpen(false)} color='secondary'>\n              Cancel\n            </Button>\n            <Button\n              onClick={() => {\n                addElem(createChoice);\n                setPopoverOpen(false);\n              }}\n              color='primary'\n            >\n              Create\n            </Button>\n          </div>\n        </PopoverBody>\n      </Popover>\n    </div>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport {\n  faArrowUp,\n  faArrowDown,\n  faPencilAlt,\n  faTrash,\n} from '@fortawesome/free-solid-svg-icons';\nimport FBCheckbox from './checkbox/FBCheckbox';\nimport Collapse from './Collapse/Collapse';\nimport CardModal from './CardModal';\nimport CardGeneralParameterInputs from './CardGeneralParameterInputs';\nimport Add from './Add';\nimport FontAwesomeIcon from './FontAwesomeIcon';\nimport Tooltip from './Tooltip';\nimport { getRandomId } from './utils';\nimport type { Node } from 'react';\nimport type { Parameters, Mods, FormInput } from './types';\n\nconst useStyles = createUseStyles({\n  cardEntries: {\n    'border-bottom': '1px solid gray',\n    margin: '.5em 1.5em 0 1.5em',\n    '& h5': {\n      color: 'black',\n      'font-size': '14px',\n      'font-weight': 'bold',\n    },\n    '& .card-entry-row': {\n      display: 'flex',\n    },\n    '& .card-entry': {\n      margin: 0,\n      width: '50%',\n      'text-align': 'left',\n      padding: '0.5em',\n      '&.wide-card-entry': {\n        width: '100%',\n      },\n    },\n    '& input': {\n      border: '1px solid gray',\n      'border-radius': '4px',\n    },\n    '& .card-category-options': {\n      padding: '.5em',\n    },\n    '& .card-select': {\n      border: '1px solid var(--gray)',\n      'border-radius': '4px',\n    },\n    '& .card-array': {\n      '& .fa-plus-square': { display: 'none' },\n      '& .section-entries': { '& .fa-plus-square': { display: 'initial' } },\n    },\n    '& .card-enum': {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%',\n      backgroundColor: 'var(--light-gray)',\n      textAlign: 'left',\n      padding: '1em',\n      '& h3': { fontSize: '16px', margin: '0 0 .5em 0' },\n      '& label': { color: 'black', fontSize: '14px' },\n      '& .card-enum-header': {\n        marginTop: '0.5em',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        '& h5': { width: '50%', fontWeight: 'bold', fontSize: '14px' },\n      },\n      '& .fa': { cursor: 'pointer' },\n    },\n  },\n  cardInteractions: {\n    margin: '.5em 1.5em',\n    textAlign: 'left',\n    '& .fa': {\n      marginRight: '1em',\n      borderRadius: '4px',\n      padding: '.25em',\n      height: '25px',\n      width: '25px',\n    },\n    '& .fa-arrow-up, .fa-arrow-down': { marginRight: '.5em' },\n    '& .fa-trash': { border: '1px solid #DE5354', color: '#DE5354' },\n    '& .fb-checkbox': { display: 'inline-block' },\n    '& .interactions-left, & .interactions-right': {\n      display: 'inline-block',\n      width: '48%',\n      margin: '0 auto',\n    },\n    '& .interactions-left': { textAlign: 'left' },\n    '& .interactions-right': { textAlign: 'right' },\n  },\n});\n\nexport default function Card({\n  componentProps,\n  onChange,\n  onDelete,\n  onMoveUp,\n  onMoveDown,\n  TypeSpecificParameters,\n  addElem,\n  cardOpen,\n  setCardOpen,\n  allFormInputs,\n  mods,\n  showObjectNameInput = true,\n}: {\n  componentProps: {\n    [string]: string | number | boolean | Array<string | number>,\n    path: string,\n  },\n  onChange: ({ [string]: any }) => void,\n  onDelete?: () => void,\n  onMoveUp?: () => void,\n  onMoveDown?: () => void,\n  TypeSpecificParameters: React.AbstractComponent<{\n    parameters: Parameters,\n    onChange: (newParams: Parameters) => void,\n  }>,\n  addElem?: (choice: string) => void,\n  cardOpen: boolean,\n  setCardOpen: (newState: boolean) => void,\n  mods?: Mods,\n  allFormInputs: { [string]: FormInput },\n  showObjectNameInput?: boolean,\n}): Node {\n  const classes = useStyles();\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const [elementId] = React.useState(getRandomId());\n\n  return (\n    <React.Fragment>\n      <Collapse\n        isOpen={cardOpen}\n        toggleCollapse={() => setCardOpen(!cardOpen)}\n        title={\n          <React.Fragment>\n            <span onClick={() => setCardOpen(!cardOpen)} className='label'>\n              {componentProps.title || componentProps.name}{' '}\n              {componentProps.parent ? (\n                <Tooltip\n                  text={`Depends on ${(componentProps.parent: any)}`}\n                  id={`${elementId}_parentinfo`}\n                  type='alert'\n                />\n              ) : (\n                ''\n              )}\n              {componentProps.$ref !== undefined ? (\n                <Tooltip\n                  text={`Is an instance of pre-configured component ${(componentProps.$ref: any)}`}\n                  id={`${elementId}_refinfo`}\n                  type='alert'\n                />\n              ) : (\n                ''\n              )}\n            </span>\n            <span className='arrows'>\n              <span id={`${elementId}_moveupbiginfo`}>\n                <FontAwesomeIcon\n                  icon={faArrowUp}\n                  onClick={() => (onMoveUp ? onMoveUp() : {})}\n                />\n              </span>\n              <UncontrolledTooltip\n                placement='top'\n                target={`${elementId}_moveupbiginfo`}\n              >\n                Move form element up\n              </UncontrolledTooltip>\n              <span id={`${elementId}_movedownbiginfo`}>\n                <FontAwesomeIcon\n                  icon={faArrowDown}\n                  onClick={() => (onMoveDown ? onMoveDown() : {})}\n                />\n              </span>\n              <UncontrolledTooltip\n                placement='top'\n                target={`${elementId}_movedownbiginfo`}\n              >\n                Move form element down\n              </UncontrolledTooltip>\n            </span>\n          </React.Fragment>\n        }\n        className={`card-container ${\n          componentProps.dependent ? 'card-dependent' : ''\n        } ${componentProps.$ref === undefined ? '' : 'card-reference'}`}\n      >\n        <div className={classes.cardEntries}>\n          <CardGeneralParameterInputs\n            parameters={(componentProps: any)}\n            onChange={onChange}\n            allFormInputs={allFormInputs}\n            mods={mods}\n            showObjectNameInput={showObjectNameInput}\n          />\n        </div>\n        <div className={classes.cardInteractions}>\n          <span id={`${elementId}_editinfo`}>\n            <FontAwesomeIcon\n              icon={faPencilAlt}\n              onClick={() => setModalOpen(true)}\n            />\n          </span>\n          <UncontrolledTooltip placement='top' target={`${elementId}_editinfo`}>\n            Additional configurations for this form element\n          </UncontrolledTooltip>\n          <span id={`${elementId}_trashinfo`}>\n            <FontAwesomeIcon icon={faTrash} onClick={onDelete || (() => {})} />\n          </span>\n          <UncontrolledTooltip\n            placement='top'\n            target={`${elementId}_trashinfo`}\n          >\n            Delete form element\n          </UncontrolledTooltip>\n          <FBCheckbox\n            onChangeValue={() =>\n              onChange({\n                ...componentProps,\n                required: !componentProps.required,\n              })\n            }\n            isChecked={!!componentProps.required}\n            label='Required'\n            id={`${elementId}_required`}\n          />\n        </div>\n        <CardModal\n          componentProps={componentProps}\n          isOpen={modalOpen}\n          onClose={() => setModalOpen(false)}\n          onChange={(newComponentProps: {\n            [string]: string | number | boolean | Array<string | number>,\n          }) => {\n            onChange(newComponentProps);\n          }}\n          TypeSpecificParameters={TypeSpecificParameters}\n        />\n      </Collapse>\n      {addElem ? <Add addElem={(choice: string) => addElem(choice)} /> : ''}\n    </React.Fragment>\n  );\n}\n","// @flow\nimport * as React from 'react';\nimport { Input } from 'reactstrap';\nimport Select from 'react-select';\nimport { createUseStyles } from 'react-jss';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport CardEnumOptions from '../CardEnumOptions';\nimport { getRandomId } from '../utils';\nimport type { Node } from 'react';\nimport type { Parameters, FormInput } from '../types';\n\nconst useStyles = createUseStyles({\n  hidden: {\n    display: 'none',\n  },\n});\n\n// specify the inputs required for a string type object\nexport function CardDefaultParameterInputs({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (Parameters) => void,\n}): Node {\n  return <div />;\n}\n\nconst getInputCardBodyComponent = ({ type }: { type: string }) =>\n  function InputCardBodyComponent({\n    parameters,\n    onChange,\n  }: {\n    parameters: Parameters,\n    onChange: (newParams: Parameters) => void,\n  }) {\n    return (\n      <React.Fragment>\n        <h5>Default value</h5>\n        <Input\n          value={parameters.default || ''}\n          placeholder='Default'\n          type={type}\n          onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n            onChange({ ...parameters, default: ev.target.value })\n          }\n          className='card-text'\n        />\n      </React.Fragment>\n    );\n  };\n\nfunction Checkbox({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <div className='card-boolean'>\n      <FBCheckbox\n        onChangeValue={() => {\n          onChange({\n            ...parameters,\n            default: parameters.default ? parameters.default !== true : true,\n          });\n        }}\n        isChecked={parameters.default ? parameters.default === true : false}\n        label='Default'\n      />\n    </div>\n  );\n}\n\nfunction MultipleChoice({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  const classes = useStyles();\n  const enumArray = Array.isArray(parameters.enum) ? parameters.enum : [];\n  // eslint-disable-next-line no-restricted-globals\n  const containsUnparsableString = enumArray.some((val) => isNaN(val));\n  const containsString =\n    containsUnparsableString ||\n    enumArray.some((val) => typeof val === 'string');\n  const [isNumber, setIsNumber] = React.useState(\n    !!enumArray.length && !containsString,\n  );\n  const [elementId] = React.useState(getRandomId());\n  return (\n    <div className='card-enum'>\n      <h3>Possible Values</h3>\n      <FBCheckbox\n        onChangeValue={() => {\n          if (Array.isArray(parameters.enumNames)) {\n            // remove the enumNames\n            onChange({\n              ...parameters,\n              enumNames: null,\n            });\n          } else {\n            // create enumNames as a copy of enum values\n            onChange({\n              ...parameters,\n              enumNames: enumArray.map((val) => `${val}`),\n            });\n          }\n        }}\n        isChecked={Array.isArray(parameters.enumNames)}\n        label='Display label is different from value'\n        id={`${elementId}_different`}\n      />\n      <div\n        className={\n          containsUnparsableString || !enumArray.length ? classes.hidden : ''\n        }\n      >\n        <FBCheckbox\n          onChangeValue={() => {\n            if (containsString || !isNumber) {\n              // attempt converting enum values into numbers\n              try {\n                const newEnum = enumArray.map((val) => {\n                  let newNum = 0;\n                  if (val) newNum = parseFloat(val) || 0;\n                  if (Number.isNaN(newNum))\n                    throw new Error(`Could not convert ${val}`);\n                  return newNum;\n                });\n                setIsNumber(true);\n                onChange({\n                  ...parameters,\n                  enum: newEnum,\n                });\n              } catch (error) {\n                // eslint-disable-next-line no-console\n                console.error(error);\n              }\n            } else {\n              // convert enum values back into strings\n              const newEnum = enumArray.map((val) => `${val || 0}`);\n              setIsNumber(false);\n              onChange({\n                ...parameters,\n                enum: newEnum,\n              });\n            }\n          }}\n          isChecked={isNumber}\n          disabled={containsUnparsableString}\n          label='Force number'\n          id={`${elementId}_forceNumber`}\n        />\n      </div>\n      <CardEnumOptions\n        initialValues={enumArray}\n        names={\n          Array.isArray(parameters.enumNames)\n            ? parameters.enumNames.map((val) => `${val}`)\n            : undefined\n        }\n        showNames={Array.isArray(parameters.enumNames)}\n        onChange={(newEnum: Array<string>, newEnumNames?: Array<string>) =>\n          onChange({\n            ...parameters,\n            enum: newEnum,\n            enumNames: newEnumNames,\n          })\n        }\n        type={isNumber ? 'number' : 'string'}\n      />\n    </div>\n  );\n}\n\nconst defaultInputs: { [string]: FormInput } = {\n  dateTime: {\n    displayName: 'Date-Time',\n    matchIf: [\n      {\n        types: ['string'],\n        format: 'date-time',\n      },\n    ],\n    defaultDataSchema: {\n      format: 'date-time',\n    },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: getInputCardBodyComponent({ type: 'datetime-local' }),\n    modalBody: CardDefaultParameterInputs,\n  },\n  date: {\n    displayName: 'Date',\n    matchIf: [\n      {\n        types: ['string'],\n        format: 'date',\n      },\n    ],\n    defaultDataSchema: {\n      format: 'date',\n    },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: getInputCardBodyComponent({ type: 'date' }),\n    modalBody: CardDefaultParameterInputs,\n  },\n  time: {\n    displayName: 'Time',\n    matchIf: [\n      {\n        types: ['string'],\n        format: 'time',\n      },\n    ],\n    defaultDataSchema: {\n      format: 'time',\n    },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: getInputCardBodyComponent({ type: 'time' }),\n    modalBody: CardDefaultParameterInputs,\n  },\n  checkbox: {\n    displayName: 'Checkbox',\n    matchIf: [\n      {\n        types: ['boolean'],\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'boolean',\n    cardBody: Checkbox,\n    modalBody: CardDefaultParameterInputs,\n  },\n  radio: {\n    displayName: 'Radio',\n    matchIf: [\n      {\n        types: ['string', 'number', 'integer', 'array', 'boolean', 'null'],\n        widget: 'radio',\n        enum: true,\n      },\n    ],\n    defaultDataSchema: { enum: [] },\n    defaultUiSchema: {\n      'ui:widget': 'radio',\n    },\n    type: 'string',\n    cardBody: MultipleChoice,\n    modalBody: CardDefaultParameterInputs,\n  },\n  dropdown: {\n    displayName: 'Dropdown',\n    matchIf: [\n      {\n        types: ['string', 'number', 'integer', 'array', 'boolean', 'null'],\n        enum: true,\n      },\n    ],\n    defaultDataSchema: { enum: [] },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: MultipleChoice,\n    modalBody: CardDefaultParameterInputs,\n  },\n};\n\nexport default defaultInputs;\n","// @flow\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Select from 'react-select';\nimport { createUseStyles } from 'react-jss';\nimport {\n  Alert,\n  Input,\n  UncontrolledTooltip,\n  FormGroup,\n  FormFeedback,\n} from 'reactstrap';\nimport {\n  faArrowUp,\n  faArrowDown,\n  faPencilAlt,\n  faTrash,\n} from '@fortawesome/free-solid-svg-icons';\nimport FBCheckbox from './checkbox/FBCheckbox';\nimport Collapse from './Collapse/Collapse';\nimport CardModal from './CardModal';\nimport { CardDefaultParameterInputs } from './defaults/defaultInputs';\nimport Tooltip from './Tooltip';\nimport Add from './Add';\nimport Card from './Card';\nimport {\n  checkForUnsupportedFeatures,\n  generateElementComponentsFromSchemas,\n  countElementsFromSchema,\n  addCardObj,\n  addSectionObj,\n  onDragEnd,\n} from './utils';\nimport FontAwesomeIcon from './FontAwesomeIcon';\nimport { getRandomId } from './utils';\nimport type { Node } from 'react';\nimport type { FormInput, Mods } from './types';\n\nconst useStyles = createUseStyles({\n  sectionContainer: {\n    '& .section-head': {\n      display: 'flex',\n      borderBottom: '1px solid var(--gray)',\n      margin: '0.5em 1.5em 0 1.5em',\n      '& h5': {\n        color: 'black',\n        fontSize: '14px',\n        fontWeight: 'bold',\n      },\n      '& .section-entry': {\n        width: '33%',\n        textAlign: 'left',\n        padding: '0.5em',\n      },\n      '& .section-reference': { width: '100%' },\n    },\n    '& .section-footer': {\n      marginTop: '1em',\n      textAlign: 'center',\n      '& .fa': { cursor: 'pointer' },\n    },\n    '& .section-interactions': {\n      margin: '0.5em 1.5em',\n      textAlign: 'left',\n      borderTop: '1px solid var(--gray)',\n      paddingTop: '1em',\n      '& .fa': {\n        marginRight: '1em',\n        borderRadius: '4px',\n        padding: '0.25em',\n        height: '25px',\n        width: '25px',\n      },\n      '& .fa-pencil-alt, & .fa-arrow-up, & .fa-arrow-down': {\n        border: '1px solid #1d71ad',\n        color: '#1d71ad',\n      },\n      '& .fa-trash': { border: '1px solid #de5354', color: '#de5354' },\n      '& .fa-arrow-up, & .fa-arrow-down': { marginRight: '0.5em' },\n      '& .fb-checkbox': {\n        display: 'inline-block',\n        label: { color: '#9aa4ab' },\n      },\n      '& .interactions-left, & .interactions-right': {\n        display: 'inline-block',\n        width: '48%',\n        margin: '0 auto',\n      },\n      '& .interactions-left': { textAlign: 'left' },\n      '& .interactions-right': { textAlign: 'right' },\n    },\n  },\n});\n\nexport default function Section({\n  name,\n  required,\n  schema,\n  uischema,\n  onChange,\n  onNameChange,\n  onRequireToggle,\n  onDependentsChange,\n  onDelete,\n  onMoveUp,\n  onMoveDown,\n  path,\n  definitionData,\n  definitionUi,\n  hideKey,\n  reference,\n  dependents,\n  dependent,\n  parent,\n  neighborNames,\n  addElem,\n  cardOpen,\n  setCardOpen,\n  allFormInputs,\n  mods,\n  categoryHash,\n}: {\n  name: string,\n  required: boolean,\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  onChange: (\n    schema: { [string]: any },\n    uischema: { [string]: any },\n    ref?: string,\n  ) => void,\n  onNameChange: (string) => void,\n  onDependentsChange: (\n    Array<{\n      children: Array<string>,\n      value?: any,\n    }>,\n  ) => void,\n  onRequireToggle: () => any,\n  onDelete: () => any,\n  onMoveUp?: () => any,\n  onMoveDown?: () => any,\n  path: string,\n  definitionData: { [string]: any },\n  definitionUi: { [string]: any },\n  hideKey?: boolean,\n  reference?: string,\n  dependents?: Array<{\n    children: Array<string>,\n    value?: any,\n  }>,\n  dependent?: boolean,\n  parent?: string,\n  neighborNames?: Array<string>,\n  addElem?: (choice: string) => void,\n  cardOpen: boolean,\n  setCardOpen: (newState: boolean) => void,\n  allFormInputs: { [string]: FormInput },\n  mods?: Mods,\n  categoryHash: { [string]: string },\n}): Node {\n  const classes = useStyles();\n  const unsupportedFeatures = checkForUnsupportedFeatures(\n    schema || {},\n    uischema || {},\n    allFormInputs,\n  );\n  const schemaData = schema || {};\n  const elementNum = countElementsFromSchema(schemaData);\n  const defaultCollapseStates = [...Array(elementNum)].map(() => false);\n  const [cardOpenArray, setCardOpenArray] = React.useState(\n    defaultCollapseStates,\n  );\n  // keep name in state to avoid losing focus\n  const [keyName, setKeyName] = React.useState(name);\n  const [keyError, setKeyError] = React.useState(null);\n  // keep requirements in state to avoid rapid updates\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const [elementId] = React.useState(getRandomId());\n\n  return (\n    <React.Fragment>\n      <Collapse\n        isOpen={cardOpen}\n        toggleCollapse={() => setCardOpen(!cardOpen)}\n        title={\n          <React.Fragment>\n            <span onClick={() => setCardOpen(!cardOpen)} className='label'>\n              {schemaData.title || keyName}{' '}\n              {parent ? (\n                <Tooltip\n                  text={`Depends on ${parent}`}\n                  id={`${elementId}_parentinfo`}\n                  type='alert'\n                />\n              ) : (\n                ''\n              )}\n            </span>\n            <span className='arrows'>\n              <span id={`${elementId}_moveupbiginfo`}>\n                <FontAwesomeIcon\n                  icon={faArrowUp}\n                  onClick={() => (onMoveUp ? onMoveUp() : {})}\n                />\n              </span>\n              <UncontrolledTooltip\n                placement='top'\n                target={`${elementId}_moveupbiginfo`}\n              >\n                Move form element up\n              </UncontrolledTooltip>\n              <span id={`${elementId}_movedownbiginfo`}>\n                <FontAwesomeIcon\n                  icon={faArrowDown}\n                  onClick={() => (onMoveDown ? onMoveDown() : {})}\n                />\n              </span>\n              <UncontrolledTooltip\n                placement='top'\n                target={`${elementId}_movedownbiginfo`}\n              >\n                Move form element down\n              </UncontrolledTooltip>\n            </span>\n          </React.Fragment>\n        }\n        className={`section-container ${classes.sectionContainer} ${\n          dependent ? 'section-dependent' : ''\n        } ${reference ? 'section-reference' : ''}`}\n      >\n        <div\n          className={`section-entries ${reference ? 'section-reference' : ''}`}\n        >\n          <div className='section-head'>\n            {reference ? (\n              <div className='section-entry section-reference'>\n                <h5>Reference Section</h5>\n                <Select\n                  value={{\n                    value: reference,\n                    label: reference,\n                  }}\n                  placeholder='Reference'\n                  options={Object.keys(definitionData).map((key) => ({\n                    value: `#/definitions/${key}`,\n                    label: `#/definitions/${key}`,\n                  }))}\n                  onChange={(val: any) => {\n                    onChange(schema, uischema, val.value);\n                  }}\n                  className='section-select'\n                />\n              </div>\n            ) : (\n              ''\n            )}\n            <div className='section-entry' data-test='section-object-name'>\n              <h5>\n                Section Object Name{' '}\n                <Tooltip\n                  text={\n                    mods &&\n                    mods.tooltipDescriptions &&\n                    mods.tooltipDescriptions &&\n                    typeof mods.tooltipDescriptions.cardSectionObjectName ===\n                      'string'\n                      ? mods.tooltipDescriptions.cardSectionObjectName\n                      : 'The key to the object that will represent this form section.'\n                  }\n                  id={`${elementId}_nameinfo`}\n                  type='help'\n                />\n              </h5>\n              <FormGroup>\n                <Input\n                  invalid={keyError !== null}\n                  value={keyName || ''}\n                  placeholder='Key'\n                  type='text'\n                  onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n                    setKeyName(ev.target.value)\n                  }\n                  onBlur={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n                    const { value } = ev.target;\n                    if (\n                      value === name ||\n                      !(neighborNames && neighborNames.includes(value))\n                    ) {\n                      setKeyError(null);\n                      onNameChange(value);\n                    } else {\n                      setKeyName(name);\n                      setKeyError(`\"${value}\" is already in use.`);\n                      onNameChange(name);\n                    }\n                  }}\n                  className='card-text'\n                  readOnly={hideKey}\n                />\n                <FormFeedback>{keyError}</FormFeedback>\n              </FormGroup>\n            </div>\n            <div className='section-entry' data-test='section-display-name'>\n              <h5>\n                Section Display Name{' '}\n                <Tooltip\n                  text={\n                    mods &&\n                    mods.tooltipDescriptions &&\n                    mods.tooltipDescriptions &&\n                    typeof mods.tooltipDescriptions.cardSectionDisplayName ===\n                      'string'\n                      ? mods.tooltipDescriptions.cardSectionDisplayName\n                      : 'The name of the form section that will be shown to users of the form.'\n                  }\n                  id={`${elementId}_titleinfo`}\n                  type='help'\n                />\n              </h5>\n              <Input\n                value={schemaData.title || ''}\n                placeholder='Title'\n                type='text'\n                onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n                  onChange(\n                    {\n                      ...schema,\n                      title: ev.target.value,\n                    },\n                    uischema,\n                  )\n                }\n                className='card-text'\n              />\n            </div>\n            <div className='section-entry' data-test='section-description'>\n              <h5>\n                Section Description{' '}\n                <Tooltip\n                  text={\n                    mods &&\n                    mods.tooltipDescriptions &&\n                    mods.tooltipDescriptions &&\n                    typeof mods.tooltipDescriptions.cardSectionDescription ===\n                      'string'\n                      ? mods.tooltipDescriptions.cardSectionDescription\n                      : 'A description of the section which will be visible on the form.'\n                  }\n                  id={`${elementId}_descriptioninfo`}\n                  type='help'\n                />\n              </h5>\n              <Input\n                value={schemaData.description || ''}\n                placeholder='Description'\n                type='text'\n                onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n                  onChange(\n                    {\n                      ...schema,\n                      description: ev.target.value,\n                    },\n                    uischema,\n                  )\n                }\n                className='card-text'\n              />\n            </div>\n            <Alert\n              style={{\n                display: unsupportedFeatures.length === 0 ? 'none' : 'block',\n              }}\n              color='warning'\n            >\n              <h5>Unsupported Features:</h5>\n              {unsupportedFeatures.map((message) => (\n                <li key={`${elementId}_${message}`}>{message}</li>\n              ))}\n            </Alert>\n          </div>\n          <div className='section-body'>\n            <DragDropContext\n              onDragEnd={(result) =>\n                onDragEnd(result, {\n                  schema,\n                  uischema,\n                  onChange,\n                  definitionData,\n                  definitionUi,\n                  categoryHash,\n                })\n              }\n              className='section-body'\n            >\n              <Droppable droppableId='droppable'>\n                {(providedDroppable) => (\n                  <div\n                    ref={providedDroppable.innerRef}\n                    {...providedDroppable.droppableProps}\n                  >\n                    {generateElementComponentsFromSchemas({\n                      schemaData: schema,\n                      uiSchemaData: uischema,\n                      onChange,\n                      path,\n                      definitionData,\n                      definitionUi,\n                      cardOpenArray,\n                      setCardOpenArray,\n                      allFormInputs,\n                      mods,\n                      categoryHash,\n                      Card,\n                      Section,\n                    }).map((element: any, index) => (\n                      <Draggable\n                        key={element.key}\n                        draggableId={element.key}\n                        index={index}\n                      >\n                        {(providedDraggable) => (\n                          <div\n                            ref={providedDraggable.innerRef}\n                            {...providedDraggable.draggableProps}\n                            {...providedDraggable.dragHandleProps}\n                          >\n                            {element}\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {providedDroppable.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </DragDropContext>\n          </div>\n          <div className='section-footer'>\n            <Add\n              addElem={(choice: string) => {\n                if (choice === 'card') {\n                  addCardObj({\n                    schema,\n                    uischema,\n                    mods,\n                    onChange,\n                    definitionData,\n                    definitionUi,\n                    categoryHash,\n                  });\n                } else if (choice === 'section') {\n                  addSectionObj({\n                    schema,\n                    uischema,\n                    onChange,\n                    definitionData,\n                    definitionUi,\n                    categoryHash,\n                  });\n                }\n              }}\n              hidden={\n                schemaData.properties &&\n                Object.keys(schemaData.properties).length !== 0\n              }\n            />\n          </div>\n          <div className='section-interactions'>\n            <span id={`${elementId}_editinfo`}>\n              <FontAwesomeIcon\n                icon={faPencilAlt}\n                onClick={() => setModalOpen(true)}\n              />\n            </span>\n            <UncontrolledTooltip\n              placement='top'\n              target={`${elementId}_editinfo`}\n            >\n              Additional configurations for this form element\n            </UncontrolledTooltip>\n            <span id={`${elementId}_trashinfo`}>\n              <FontAwesomeIcon\n                icon={faTrash}\n                onClick={() => (onDelete ? onDelete() : {})}\n              />\n            </span>\n            <UncontrolledTooltip\n              placement='top'\n              target={`${elementId}_trashinfo`}\n            >\n              Delete form element\n            </UncontrolledTooltip>\n            <FBCheckbox\n              onChangeValue={() => onRequireToggle()}\n              isChecked={required}\n              label='Required'\n              id={`${elementId}_required`}\n            />\n          </div>\n        </div>\n        <CardModal\n          componentProps={{\n            dependents,\n            neighborNames,\n            name: keyName,\n            schema,\n            type: 'object',\n            'ui:column': uischema['ui:column'] ?? '',\n          }}\n          isOpen={modalOpen}\n          onClose={() => setModalOpen(false)}\n          onChange={(newComponentProps: { [string]: any }) => {\n            onDependentsChange(newComponentProps.dependents);\n            onChange(schema, {\n              ...uischema,\n              'ui:column': newComponentProps['ui:column'],\n            });\n          }}\n          TypeSpecificParameters={CardDefaultParameterInputs}\n        />\n      </Collapse>\n      {addElem ? <Add addElem={(choice: string) => addElem(choice)} /> : ''}\n    </React.Fragment>\n  );\n}\n","// @flow\n\nexport const arrows = {\n  '& .arrows': {\n    float: 'right',\n    '& .fa-arrow-up, & .fa-arrow-down': {\n      'border-radius': '4px',\n      padding: '.25em',\n      margin: '0 .5em 0 0',\n      border: '1px solid #1d71ad',\n      color: '#1d71ad',\n      height: '28px',\n      width: '28px',\n    },\n  },\n};\n","// @flow\n\nimport React, { useState } from 'react';\nimport type { Node } from 'react';\nimport type { Parameters } from '../types';\nimport { getRandomId } from '../utils';\nimport Tooltip from '../Tooltip';\nimport { Input } from 'reactstrap';\n\nexport function PlaceholderInput({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (Parameters) => void,\n}): Node {\n  const [elementId] = useState(getRandomId());\n  return (\n    <React.Fragment>\n      <h4>\n        Placeholder{' '}\n        <a\n          href='https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-placeholder'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <Tooltip\n            id={`${elementId}_placeholder`}\n            type='help'\n            text='Hint to the user as to what kind of information is expected in the field'\n          />\n        </a>\n      </h4>\n      <Input\n        value={parameters['ui:placeholder']}\n        placeholder='Placeholder'\n        key='placeholder'\n        type='text'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            'ui:placeholder': ev.target.value,\n          });\n        }}\n        className='card-modal-text'\n      />\n    </React.Fragment>\n  );\n}\n","// @flow\n\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport { Input } from 'reactstrap';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport Tooltip from '../Tooltip';\nimport { getRandomId } from '../utils';\nimport type { Parameters, FormInput } from '../types';\nimport { PlaceholderInput } from '../inputs/PlaceholderInput';\n\nconst formatDictionary = {\n  '': 'None',\n  email: 'Email',\n  hostname: 'Hostname',\n  uri: 'URI',\n  regex: 'Regular Expression',\n};\n\nconst formatTypeDictionary = {\n  email: 'email',\n  url: 'uri',\n};\n\nconst autoDictionary = {\n  '': 'None',\n  email: 'Email',\n  username: 'User Name',\n  password: 'Password',\n  'street-address': 'Street Address',\n  country: 'Country',\n};\n\n// specify the inputs required for a string type object\nfunction CardShortAnswerParameterInputs({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  const [elementId] = useState(getRandomId());\n  return (\n    <div>\n      <h4>Minimum Length</h4>\n      <Input\n        value={parameters.minLength ? parameters.minLength : ''}\n        placeholder='Minimum Length'\n        key='minLength'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            minLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>Maximum Length</h4>\n      <Input\n        value={parameters.maxLength ? parameters.maxLength : ''}\n        placeholder='Maximum Length'\n        key='maxLength'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            maxLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>\n        Regular Expression Pattern{' '}\n        <a\n          href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <Tooltip\n            id={`${elementId}_regex`}\n            type='help'\n            text='Regular expression pattern that this must satisfy'\n          />\n        </a>\n      </h4>\n      <Input\n        value={parameters.pattern ? parameters.pattern : ''}\n        placeholder='Regular Expression Pattern'\n        key='pattern'\n        type='text'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            pattern: ev.target.value,\n          });\n        }}\n        className='card-modal-text'\n      />\n      <h4>\n        Format{' '}\n        <Tooltip\n          id={`${elementId}_format`}\n          type='help'\n          text='Require string input to match a certain common format'\n        />\n      </h4>\n      <Select\n        value={{\n          value: parameters.format\n            ? formatDictionary[\n                typeof parameters.format === 'string' ? parameters.format : ''\n              ]\n            : '',\n          label: parameters.format\n            ? formatDictionary[\n                typeof parameters.format === 'string' ? parameters.format : ''\n              ]\n            : 'None',\n        }}\n        placeholder='Format'\n        key='format'\n        options={Object.keys(formatDictionary).map((key) => ({\n          value: key,\n          label: formatDictionary[key],\n        }))}\n        onChange={(val: any) => {\n          onChange({\n            ...parameters,\n            format: val.value,\n          });\n        }}\n        className='card-modal-select'\n      />\n      <h5>\n        Auto Complete Category{' '}\n        <a\n          href='https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <Tooltip\n            id={`${elementId}_autocomplete`}\n            type='help'\n            text=\"Suggest entries based on the user's browser history\"\n          />\n        </a>\n      </h5>\n      <Select\n        value={{\n          value: parameters['ui:autocomplete']\n            ? autoDictionary[\n                typeof parameters['ui:autocomplete'] === 'string'\n                  ? parameters['ui:autocomplete']\n                  : ''\n              ]\n            : '',\n          label: parameters['ui:autocomplete']\n            ? autoDictionary[\n                typeof parameters['ui:autocomplete'] === 'string'\n                  ? parameters['ui:autocomplete']\n                  : ''\n              ]\n            : 'None',\n        }}\n        placeholder='Auto Complete'\n        key='ui:autocomplete'\n        options={Object.keys(autoDictionary).map((key) => ({\n          value: key,\n          label: autoDictionary[key],\n        }))}\n        onChange={(val: any) => {\n          onChange({\n            ...parameters,\n            'ui:autocomplete': val.value,\n          });\n        }}\n        className='card-modal-select'\n      />\n      <PlaceholderInput parameters={parameters} onChange={onChange} />\n      <h4>\n        Column Size{' '}\n        <a\n          href='https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Basic_Concepts_of_Grid_Layout'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <Tooltip\n            id={`${elementId}_column_size`}\n            type='help'\n            text='Set the column size of the input'\n          />\n        </a>\n      </h4>\n      <Input\n        value={parameters['ui:column'] ? parameters['ui:column'] : ''}\n        placeholder='Column size'\n        key='ui:column'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            'ui:column': ev.target.value,\n          });\n        }}\n        className='card-modal-text'\n      />\n      <div className='card-modal-boolean'>\n        <FBCheckbox\n          onChangeValue={() => {\n            onChange({\n              ...parameters,\n              'ui:autofocus': parameters['ui:autofocus']\n                ? parameters['ui:autofocus'] !== true\n                : true,\n            });\n          }}\n          isChecked={\n            parameters['ui:autofocus']\n              ? parameters['ui:autofocus'] === true\n              : false\n          }\n          label='Auto Focus'\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction ShortAnswerField({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <React.Fragment>\n      <h5>Default value</h5>\n      <Input\n        value={parameters.default}\n        placeholder='Default'\n        type={formatTypeDictionary[parameters.format] || 'text'}\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n          onChange({ ...parameters, default: ev.target.value })\n        }\n        className='card-text'\n      />\n    </React.Fragment>\n  );\n}\n\nfunction Password({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <React.Fragment>\n      <h5>Default password</h5>\n      <Input\n        value={parameters.default}\n        placeholder='Default'\n        type='password'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n          onChange({ ...parameters, default: ev.target.value })\n        }\n        className='card-text'\n      />\n    </React.Fragment>\n  );\n}\n\nconst shortAnswerInput: { [string]: FormInput } = {\n  shortAnswer: {\n    displayName: 'Short Answer',\n    matchIf: [\n      {\n        types: ['string'],\n      },\n      ...['email', 'hostname', 'uri', 'regex'].map((format) => ({\n        types: ['string'],\n        format,\n      })),\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: ShortAnswerField,\n    modalBody: CardShortAnswerParameterInputs,\n  },\n  password: {\n    displayName: 'Password',\n    matchIf: [\n      {\n        types: ['string'],\n        widget: 'password',\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {\n      'ui:widget': 'password',\n    },\n    type: 'string',\n    cardBody: Password,\n    modalBody: CardShortAnswerParameterInputs,\n  },\n};\n\nexport default shortAnswerInput;\n","// @flow\n\nimport React, { useState } from 'react';\nimport { Input } from 'reactstrap';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport Tooltip from '../Tooltip';\nimport { getRandomId } from '../utils';\nimport type { Parameters, FormInput } from '../types';\nimport { PlaceholderInput } from '../inputs/PlaceholderInput';\n\n// specify the inputs required for a string type object\nfunction CardLongAnswerParameterInputs({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  const [elementId] = useState(getRandomId());\n  return (\n    <div>\n      <h4>Minimum Length</h4>\n      <Input\n        value={parameters.minLength ? parameters.minLength : ''}\n        placeholder='Minimum Length'\n        key='minLength'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            minLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>Maximum Length</h4>\n      <Input\n        value={parameters.maxLength ? parameters.maxLength : ''}\n        placeholder='Maximum Length'\n        key='maxLength'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            maxLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>\n        Regular Expression Pattern{' '}\n        <a href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions'>\n          <Tooltip\n            id={`${elementId}_regex`}\n            type='help'\n            text='Regular expression pattern that this must satisfy'\n          />\n        </a>\n      </h4>\n      <Input\n        value={parameters.pattern ? parameters.pattern : ''}\n        placeholder='Regular Expression Pattern'\n        key='pattern'\n        type='text'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            pattern: ev.target.value,\n          });\n        }}\n        className='card-modal-text'\n      />\n      <PlaceholderInput parameters={parameters} onChange={onChange} />\n      <div className='card-modal-boolean'>\n        <FBCheckbox\n          onChangeValue={() => {\n            onChange({\n              ...parameters,\n              'ui:autofocus': parameters['ui:autofocus']\n                ? parameters['ui:autofocus'] !== true\n                : true,\n            });\n          }}\n          isChecked={\n            parameters['ui:autofocus']\n              ? parameters['ui:autofocus'] === true\n              : false\n          }\n          label='Auto Focus'\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction LongAnswer({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <React.Fragment>\n      <h5>Default value</h5>\n      <Input\n        value={parameters.default}\n        placeholder='Default'\n        type='textarea'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n          onChange({ ...parameters, default: ev.target.value })\n        }\n        className='card-textarea'\n      />\n    </React.Fragment>\n  );\n}\n\nconst longAnswerInput: { [string]: FormInput } = {\n  longAnswer: {\n    displayName: 'Long Answer',\n    matchIf: [\n      {\n        types: ['string'],\n        widget: 'textarea',\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {\n      'ui:widget': 'textarea',\n    },\n    type: 'string',\n    cardBody: LongAnswer,\n    modalBody: CardLongAnswerParameterInputs,\n  },\n};\n\nexport default longAnswerInput;\n","// @flow\n\nimport React, { useState } from 'react';\nimport { Input } from 'reactstrap';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport Tooltip from '../Tooltip';\nimport { getRandomId } from '../utils';\nimport type { Parameters, FormInput } from '../types';\n\n// specify the inputs required for a number type object\nfunction CardNumberParameterInputs({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  const [elementId] = useState(getRandomId());\n  return (\n    <div>\n      <h4>\n        Multiple of{' '}\n        <Tooltip\n          id={`${elementId}_multiple`}\n          type='help'\n          text='Require number to be a multiple of this number'\n        />\n      </h4>\n      <Input\n        value={parameters.multipleOf ? parameters.multipleOf : ''}\n        placeholder='ex: 2'\n        key='multipleOf'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          let newVal = parseFloat(ev.target.value);\n          if (Number.isNaN(newVal)) newVal = null;\n          onChange({\n            ...parameters,\n            multipleOf: newVal,\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>Minimum</h4>\n      <Input\n        value={parameters.minimum || parameters.exclusiveMinimum || ''}\n        placeholder='ex: 3'\n        key='minimum'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          let newVal = parseFloat(ev.target.value);\n          if (Number.isNaN(newVal)) newVal = null;\n          // change either min or exclusiveMin depending on which one is active\n          if (parameters.exclusiveMinimum) {\n            onChange({\n              ...parameters,\n              exclusiveMinimum: newVal,\n              minimum: null,\n            });\n          } else {\n            onChange({\n              ...parameters,\n              minimum: newVal,\n              exclusiveMinimum: null,\n            });\n          }\n        }}\n        className='card-modal-number'\n      />\n      <div className='card-modal-boolean'>\n        <FBCheckbox\n          key='exclusiveMinimum'\n          onChangeValue={() => {\n            const newMin = parameters.minimum || parameters.exclusiveMinimum;\n            if (parameters.exclusiveMinimum) {\n              onChange({\n                ...parameters,\n                exclusiveMinimum: null,\n                minimum: newMin,\n              });\n            } else {\n              onChange({\n                ...parameters,\n                exclusiveMinimum: newMin,\n                minimum: null,\n              });\n            }\n          }}\n          isChecked={!!parameters.exclusiveMinimum}\n          disabled={!parameters.minimum && !parameters.exclusiveMinimum}\n          label='Exclusive Minimum'\n        />\n      </div>\n      <h4>Maximum</h4>\n      <Input\n        value={parameters.maximum || parameters.exclusiveMaximum || ''}\n        placeholder='ex: 8'\n        key='maximum'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          let newVal = parseFloat(ev.target.value);\n          if (Number.isNaN(newVal)) newVal = null;\n          // change either max or exclusiveMax depending on which one is active\n          if (parameters.exclusiveMinimum) {\n            onChange({\n              ...parameters,\n              exclusiveMaximum: newVal,\n              maximum: null,\n            });\n          } else {\n            onChange({\n              ...parameters,\n              maximum: newVal,\n              exclusiveMaximum: null,\n            });\n          }\n        }}\n        className='card-modal-number'\n      />\n      <div className='card-modal-boolean'>\n        <FBCheckbox\n          key='exclusiveMaximum'\n          onChangeValue={() => {\n            const newMax = parameters.maximum || parameters.exclusiveMaximum;\n            if (parameters.exclusiveMaximum) {\n              onChange({\n                ...parameters,\n                exclusiveMaximum: null,\n                maximum: newMax,\n              });\n            } else {\n              onChange({\n                ...parameters,\n                exclusiveMaximum: newMax,\n                maximum: null,\n              });\n            }\n          }}\n          isChecked={!!parameters.exclusiveMaximum}\n          disabled={!parameters.maximum && !parameters.exclusiveMaximum}\n          label='Exclusive Maximum'\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction NumberField({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <React.Fragment>\n      <h5>Default number</h5>\n      <Input\n        value={parameters.default}\n        placeholder='Default'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n          onChange({\n            ...parameters,\n            default: parseFloat(ev.target.value),\n          })\n        }\n        className='card-number'\n      />\n    </React.Fragment>\n  );\n}\n\nconst numberInputs: { [string]: FormInput } = {\n  integer: {\n    displayName: 'Integer',\n    matchIf: [\n      {\n        types: ['integer'],\n      },\n      {\n        types: ['integer'],\n        widget: 'number',\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'integer',\n    cardBody: NumberField,\n    modalBody: CardNumberParameterInputs,\n  },\n  number: {\n    displayName: 'Number',\n    matchIf: [\n      {\n        types: ['number'],\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'number',\n    cardBody: NumberField,\n    modalBody: CardNumberParameterInputs,\n  },\n};\n\nexport default numberInputs;\n","// @flow\n\nimport React, { useState } from 'react';\nimport { Input } from 'reactstrap';\nimport {\n  excludeKeys,\n  generateElementComponentsFromSchemas,\n  generateCategoryHash,\n} from '../utils';\nimport Card from '../Card';\nimport Section from '../Section';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport shortAnswerInputs from './shortAnswerInputs';\nimport longAnswerInputs from './longAnswerInputs';\nimport numberInputs from './numberInputs';\nimport defaultInputs from './defaultInputs';\nimport { getRandomId } from '../utils';\nimport type { CardBody, Parameters, Mods, FormInput } from '../types';\n\n// specify the inputs required for a string type object\nfunction CardArrayParameterInputs({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: ({ [string]: any }) => void,\n}) {\n  return (\n    <div>\n      <h4>Minimum Items</h4>\n      <Input\n        value={parameters.minItems || ''}\n        placeholder='ex: 2'\n        key='minimum'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            minItems: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>Maximum Items</h4>\n      <Input\n        value={parameters.maxItems || ''}\n        placeholder='ex: 2'\n        key='maximum'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            maxItems: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n    </div>\n  );\n}\n\nfunction getInnerCardComponent({\n  defaultFormInputs,\n}: {\n  defaultFormInputs: { [string]: FormInput },\n}): CardBody {\n  return function InnerCard({\n    parameters,\n    onChange,\n    mods,\n  }: {\n    parameters: Parameters,\n    onChange: (newParams: Parameters) => void,\n    mods?: Mods,\n  }) {\n    const [elementId] = useState(getRandomId);\n    const newDataProps = {};\n    const newUiProps = {};\n    const allFormInputs = excludeKeys(\n      Object.assign(\n        {},\n        defaultFormInputs,\n        (mods && mods.customFormInputs) || {},\n      ),\n      mods && mods.deactivatedFormInputs,\n    );\n\n    // parse components into data and ui relevant pieces\n    Object.keys(parameters).forEach((propName) => {\n      if (propName.startsWith('ui:*')) {\n        newUiProps[propName.substring(4)] = parameters[propName];\n      } else if (propName.startsWith('ui:')) {\n        newUiProps[propName] = parameters[propName];\n      } else if (!['name', 'required'].includes(propName)) {\n        newDataProps[propName] = parameters[propName];\n      }\n    });\n\n    const definitionData = parameters.definitionData\n      ? parameters.definitionData\n      : {};\n    const definitionUi = parameters.definitionUi ? parameters.definitionUi : {};\n    const [cardOpen, setCardOpen] = React.useState(false);\n    if (parameters.type !== 'array') {\n      return <h4>Not an array </h4>;\n    }\n    return (\n      <div className='card-array'>\n        <FBCheckbox\n          onChangeValue={() => {\n            if (newDataProps.items.type === 'object') {\n              onChange({\n                ...parameters,\n                items: {\n                  ...newDataProps.items,\n                  type: 'string',\n                },\n              });\n            } else {\n              onChange({\n                ...parameters,\n                items: {\n                  ...newDataProps.items,\n                  type: 'object',\n                },\n              });\n            }\n          }}\n          isChecked={newDataProps.items.type === 'object'}\n          label='Section'\n          id={`${elementId}_issection`}\n        />\n        {generateElementComponentsFromSchemas({\n          schemaData: { properties: { item: newDataProps.items } },\n          uiSchemaData: { item: newUiProps.items },\n          onChange: (schema, uischema) => {\n            onChange({\n              ...parameters,\n              items: schema.properties.item,\n              'ui:*items': uischema.item || {},\n            });\n          },\n          path: elementId,\n          definitionData,\n          definitionUi,\n          hideKey: true,\n          cardOpenArray: [cardOpen],\n          setCardOpenArray: (newArr) => setCardOpen(newArr[0]),\n          allFormInputs,\n          mods,\n          categoryHash: generateCategoryHash(allFormInputs),\n          Card: (props) => <Card {...props} showObjectNameInput={false} />,\n          Section,\n        })}\n      </div>\n    );\n  };\n}\n\nconst defaultFormInputs = ({\n  ...defaultInputs,\n  ...shortAnswerInputs,\n  ...longAnswerInputs,\n  ...numberInputs,\n}: { [string]: FormInput });\ndefaultFormInputs.array = {\n  displayName: 'Array',\n  matchIf: [\n    {\n      types: ['array'],\n    },\n  ],\n  defaultDataSchema: {\n    items: { type: 'string' },\n  },\n  defaultUiSchema: {},\n  type: 'array',\n  cardBody: getInnerCardComponent({ defaultFormInputs }),\n  modalBody: CardArrayParameterInputs,\n};\n\nconst ArrayInputs: { [string]: FormInput } = {\n  array: {\n    displayName: 'Array',\n    matchIf: [\n      {\n        types: ['array'],\n      },\n    ],\n    defaultDataSchema: {\n      items: { type: 'string' },\n    },\n    defaultUiSchema: {},\n    type: 'array',\n    cardBody: getInnerCardComponent({ defaultFormInputs }),\n    modalBody: CardArrayParameterInputs,\n  },\n};\n\nexport default ArrayInputs;\n","// @flow\n\nimport type { FormInput, Parameters } from '../types';\nimport Select from 'react-select';\nimport React, { useState } from 'react';\nimport type { Node } from 'react';\nimport { PlaceholderInput } from '../inputs/PlaceholderInput';\n\nexport function CardReferenceParameterInputs({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (Parameters) => void,\n}): Node {\n  return (\n    <div>\n      <PlaceholderInput parameters={parameters} onChange={onChange} />\n    </div>\n  );\n}\n\nfunction RefChoice({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  const pathArr = (parameters.$ref || '').split('/');\n  const currentValueLabel =\n    pathArr.length === 3 &&\n    pathArr[0] === '#' &&\n    pathArr[1] === 'definitions' &&\n    (parameters.definitionData || {})[pathArr[2]]\n      ? parameters.definitionData[pathArr[2]].title || parameters.$ref\n      : parameters.$ref;\n\n  return (\n    <div className='card-select'>\n      <Select\n        value={{\n          value: parameters.$ref,\n          label: currentValueLabel,\n        }}\n        placeholder='Reference'\n        options={Object.keys(parameters.definitionData || {}).map((key) => ({\n          value: `#/definitions/${key}`,\n          label: parameters.definitionData[key].title || `#/definitions/${key}`,\n        }))}\n        onChange={(val: any) => {\n          onChange({ ...parameters, $ref: val.value });\n        }}\n        className='card-select'\n      />\n    </div>\n  );\n}\n\nconst referenceInputs: { [string]: FormInput } = {\n  ref: {\n    displayName: 'Reference',\n    matchIf: [\n      {\n        types: ['null'],\n        $ref: true,\n      },\n    ],\n    defaultDataSchema: {\n      $ref: '',\n      title: '',\n      description: '',\n    },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: RefChoice,\n    modalBody: CardReferenceParameterInputs,\n  },\n};\n\nexport default referenceInputs;\n","// @flow\nimport shortAnswerInputs from './shortAnswerInputs';\nimport longAnswerInputs from './longAnswerInputs';\nimport numberInputs from './numberInputs';\nimport arrayInputs from './arrayInputs';\nimport defaultInputs from './defaultInputs';\nimport referenceInputs from './referenceInputs';\nimport type { FormInput } from '../types';\n\nconst DEFAULT_FORM_INPUTS = ({\n  ...defaultInputs,\n  ...referenceInputs,\n  ...shortAnswerInputs,\n  ...longAnswerInputs,\n  ...numberInputs,\n  ...arrayInputs,\n}: { [string]: FormInput });\n\nexport default DEFAULT_FORM_INPUTS;\n","// @flow\nimport * as React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Alert, Input } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport Card from './Card';\nimport Section from './Section';\nimport Add from './Add';\nimport { arrows as arrowsStyle } from './styles';\nimport {\n  parse,\n  stringify,\n  checkForUnsupportedFeatures,\n  generateElementComponentsFromSchemas,\n  addCardObj,\n  addSectionObj,\n  onDragEnd,\n  countElementsFromSchema,\n  generateCategoryHash,\n  excludeKeys,\n} from './utils';\nimport DEFAULT_FORM_INPUTS from './defaults/defaultFormInputs';\nimport type { Node } from 'react';\nimport type { Mods } from './types';\n\nconst useStyles = createUseStyles({\n  formBuilder: {\n    'text-align': 'center',\n    '& .fa': {\n      cursor: 'pointer',\n    },\n    '& .fa-question-circle': {\n      color: 'gray',\n    },\n    '& .fa-asterisk': {\n      'font-size': '.9em',\n      color: 'green',\n    },\n    '& .fa-plus-square': {\n      color: 'green',\n      'font-size': '1.5em',\n      margin: '0 auto',\n    },\n    ...arrowsStyle,\n    '& .card-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      display: 'block',\n      width: '70%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid gray',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid gray',\n      },\n      '& .label': {\n        float: 'left',\n      },\n    },\n    '& .card-dependent': {\n      border: '1px dashed gray',\n    },\n    '& .card-requirements': {\n      border: '1px dashed black',\n    },\n    '& .section-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      display: 'block',\n      width: '90%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid var(--gray)',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid var(--gray)',\n      },\n      '& .label': {\n        float: 'left',\n      },\n    },\n    '& .section-dependent': {\n      border: '1px dashed gray',\n    },\n    '& .section-requirements': {\n      border: '1px dashed black',\n    },\n    '& .alert': {\n      textAlign: 'left',\n      width: '70%',\n      margin: '1em auto',\n      '& h5': {\n        color: 'black',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        margin: '0',\n      },\n      '& .fa': { fontSize: '14px' },\n    },\n    '& .disabled-unchecked-checkbox': {\n      color: 'var(--gray)',\n      '& div::before': { backgroundColor: 'var(--light-gray)' },\n    },\n    '& .disabled-input': {\n      '& input': { backgroundColor: 'var(--light-gray)' },\n      '& input:focus': {\n        backgroundColor: 'var(--light-gray)',\n        border: '1px solid var(--gray)',\n      },\n    },\n  },\n  formHead: {\n    display: 'block',\n    margin: '0 auto',\n    'background-color': '#EBEBEB',\n    border: '1px solid #858F96',\n    'border-radius': '4px',\n    width: '70%',\n    padding: '10px',\n    '& div': {\n      width: '30%',\n      display: 'inline-block',\n      'text-align': 'left',\n      padding: '10px',\n    },\n    '& .form-title': {\n      'text-align': 'left',\n    },\n    '& .form-description': {\n      'text-align': 'left',\n    },\n    '& h5': {\n      'font-size': '14px',\n      'line-height': '21px',\n      'font-weight': 'bold',\n    },\n  },\n  formBody: {\n    display: 'flex',\n    flexDirection: 'column',\n    '& .fa-pencil-alt': {\n      border: '1px solid #1d71ad',\n      color: '#1d71ad',\n    },\n    '& .modal-body': {\n      maxHeight: '500px',\n      overflowY: 'scroll',\n    },\n    '& .card-container': {\n      width: '70%',\n      minWidth: '400px',\n      margin: '2em auto',\n      border: '1px solid var(--gray)',\n      borderRadius: '4px',\n      backgroundColor: 'white',\n      '& h4': {\n        width: '100%',\n        textAlign: ['left', 'left'],\n        display: 'inline-block',\n        color: '#138ac2',\n        margin: '0.25em 0.5em 0 0.5em',\n        fontSize: '18px',\n      },\n      '& .d-flex': { borderBottom: '1px solid var(--gray)' },\n      '& .label': { cssFloat: 'left' },\n    },\n    '& .card-container:hover': { border: '1px solid var(--green)' },\n    '& .card-dependent': { border: '1px dashed var(--gray)' },\n    '& .card-add': {\n      cursor: 'pointer',\n      display: 'block',\n      color: '$green',\n      fontSize: '1.5em',\n    },\n    '& .section-container': {\n      width: '90%',\n      minWidth: '400px',\n      margin: '2em auto',\n      border: '1px solid var(--gray)',\n      borderRadius: '4px',\n      '& h4': {\n        width: '100%',\n        textAlign: ['left', 'left'],\n        display: 'inline-block',\n        color: '#138ac2',\n        margin: '0.25em 0.5em 0 0.5em',\n        fontSize: '18px',\n      },\n      '& .d-flex': { borderBottom: '1px solid var(--gray)' },\n      '& .label': { cssFloat: 'left' },\n    },\n    '& .section-container:hover': { border: '1px solid var(--green)' },\n    '& .section-dependent': { border: '1px dashed var(--gray)' },\n    '& .section-requirements': { border: '1px dashed black' },\n  },\n  formFooter: {\n    marginTop: '1em',\n    textAlign: 'center',\n    '& .fa': { cursor: 'pointer', color: '$green', fontSize: '1.5em' },\n  },\n});\n\nexport default function FormBuilder({\n  schema,\n  uischema,\n  onChange,\n  mods,\n  className,\n}: {\n  schema: string,\n  uischema: string,\n  onChange: (string, string) => any,\n  mods?: Mods,\n  className?: string,\n}): Node {\n  const classes = useStyles();\n  const schemaData = (parse(schema): { [string]: any }) || {};\n  schemaData.type = 'object';\n  const uiSchemaData = (parse(uischema): { [string]: any }) || {};\n  const allFormInputs = excludeKeys(\n    Object.assign(\n      {},\n      DEFAULT_FORM_INPUTS,\n      (mods && mods.customFormInputs) || {},\n    ),\n    mods && mods.deactivatedFormInputs,\n  );\n\n  const unsupportedFeatures = checkForUnsupportedFeatures(\n    schemaData,\n    uiSchemaData,\n    allFormInputs,\n  );\n\n  const elementNum = countElementsFromSchema(schemaData);\n  const defaultCollapseStates = [...Array(elementNum)].map(() => false);\n  const [cardOpenArray, setCardOpenArray] = React.useState(\n    defaultCollapseStates,\n  );\n  const categoryHash = generateCategoryHash(allFormInputs);\n\n  return (\n    <div className={`${classes.formBuilder} ${className || ''}`}>\n      <Alert\n        style={{\n          display: unsupportedFeatures.length === 0 ? 'none' : 'block',\n        }}\n        color='warning'\n      >\n        <h5>Unsupported Features:</h5>\n        {unsupportedFeatures.map((message, index) => (\n          <li key={index}>{message}</li>\n        ))}\n      </Alert>\n      {(!mods || mods.showFormHead !== false) && (\n        <div className={classes.formHead} data-test='form-head'>\n          <div>\n            <h5 data-test='form-name-label'>\n              {mods &&\n              mods.labels &&\n              typeof mods.labels.formNameLabel === 'string'\n                ? mods.labels.formNameLabel\n                : 'Form Name'}\n            </h5>\n            <Input\n              value={schemaData.title || ''}\n              placeholder='Title'\n              type='text'\n              onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n                onChange(\n                  stringify({\n                    ...schemaData,\n                    title: ev.target.value,\n                  }),\n                  uischema,\n                );\n              }}\n              className='form-title'\n            />\n          </div>\n          <div>\n            <h5 data-test='form-description-label'>\n              {mods &&\n              mods.labels &&\n              typeof mods.labels.formDescriptionLabel === 'string'\n                ? mods.labels.formDescriptionLabel\n                : 'Form Description'}\n            </h5>\n            <Input\n              value={schemaData.description || ''}\n              placeholder='Description'\n              type='text'\n              onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n                onChange(\n                  stringify({\n                    ...schemaData,\n                    description: ev.target.value,\n                  }),\n                  uischema,\n                )\n              }\n              className='form-description'\n            />\n          </div>\n        </div>\n      )}\n      <div className={`form-body ${classes.formBody}`}>\n        <DragDropContext\n          onDragEnd={(result) =>\n            onDragEnd(result, {\n              schema: schemaData,\n              uischema: uiSchemaData,\n              onChange: (newSchema, newUiSchema) =>\n                onChange(stringify(newSchema), stringify(newUiSchema)),\n              definitionData: schemaData.definitions,\n              definitionUi: uiSchemaData.definitions,\n              categoryHash,\n            })\n          }\n          className='form-body'\n        >\n          <Droppable droppableId='droppable'>\n            {(providedDroppable) => (\n              <div\n                ref={providedDroppable.innerRef}\n                {...providedDroppable.droppableProps}\n              >\n                {generateElementComponentsFromSchemas({\n                  schemaData,\n                  uiSchemaData,\n                  onChange: (newSchema, newUiSchema) =>\n                    onChange(stringify(newSchema), stringify(newUiSchema)),\n                  definitionData: schemaData.definitions,\n                  definitionUi: uiSchemaData.definitions,\n                  path: 'root',\n                  cardOpenArray,\n                  setCardOpenArray,\n                  allFormInputs,\n                  mods,\n                  categoryHash,\n                  Card,\n                  Section,\n                }).map((element: any, index) => (\n                  <Draggable\n                    key={element.key}\n                    draggableId={element.key}\n                    index={index}\n                  >\n                    {(providedDraggable) => (\n                      <div\n                        ref={providedDraggable.innerRef}\n                        {...providedDraggable.draggableProps}\n                        {...providedDraggable.dragHandleProps}\n                      >\n                        {element}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {providedDroppable.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n      <div className={`form-footer ${classes.formFooter}`}>\n        <Add\n          addElem={(choice: string) => {\n            if (choice === 'card') {\n              addCardObj({\n                schema: schemaData,\n                uischema: uiSchemaData,\n                mods: mods,\n                onChange: (newSchema, newUiSchema) =>\n                  onChange(stringify(newSchema), stringify(newUiSchema)),\n                definitionData: schemaData.definitions,\n                definitionUi: uiSchemaData.definitions,\n                categoryHash,\n              });\n            } else if (choice === 'section') {\n              addSectionObj({\n                schema: schemaData,\n                uischema: uiSchemaData,\n                onChange: (newSchema, newUiSchema) =>\n                  onChange(stringify(newSchema), stringify(newUiSchema)),\n                definitionData: schemaData.definitions,\n                definitionUi: uiSchemaData.definitions,\n                categoryHash,\n              });\n            }\n          }}\n          hidden={\n            schemaData.properties &&\n            Object.keys(schemaData.properties).length !== 0\n          }\n        />\n      </div>\n    </div>\n  );\n}\n","// @flow\n\nimport React from 'react';\nimport {\n  generateElementComponentsFromSchemas,\n  countElementsFromSchema,\n  addCardObj,\n  addSectionObj,\n} from './utils';\nimport Card from './Card';\nimport Section from './Section';\nimport Add from './Add';\nimport DEFAULT_FORM_INPUTS from './defaults/defaultFormInputs';\nimport type { Node } from 'react';\nimport type { Mods } from './types';\n\nexport default function CardGallery({\n  definitionSchema,\n  definitionUiSchema,\n  onChange,\n  mods,\n  categoryHash,\n}: {\n  definitionSchema: { [string]: any },\n  definitionUiSchema: { [string]: any },\n  onChange: ({ [string]: any }, { [string]: any }) => void,\n  mods?: Mods,\n  categoryHash: { [string]: string },\n}): Node {\n  const elementNum = countElementsFromSchema({\n    properties: definitionSchema,\n  });\n  const defaultCollapseStates = [...Array(elementNum)].map(() => false);\n  const [cardOpenArray, setCardOpenArray] = React.useState(\n    defaultCollapseStates,\n  );\n  const allFormInputs = Object.assign(\n    {},\n    DEFAULT_FORM_INPUTS,\n    (mods && mods.customFormInputs) || {},\n  );\n  const componentArr = generateElementComponentsFromSchemas({\n    schemaData: { properties: definitionSchema },\n    uiSchemaData: definitionUiSchema,\n    onChange: (newDefinitions, newDefinitionUis) => {\n      const oldUi = newDefinitionUis;\n      const newUi = {};\n\n      Object.keys(oldUi).forEach((definedUi) => {\n        if (!['definitions', 'ui:order'].includes(definedUi))\n          newUi[definedUi] = oldUi[definedUi];\n      });\n      onChange(newDefinitions.properties, newUi);\n    },\n    path: 'definitions',\n    definitionData: definitionSchema,\n    definitionUi: definitionUiSchema,\n    cardOpenArray,\n    setCardOpenArray,\n    allFormInputs,\n    mods,\n    categoryHash,\n    Card,\n    Section,\n  }).map((element: any) => (\n    <div\n      key={typeof element.key === 'string' ? element.key : ''}\n      className='form_gallery_container'\n    >\n      {element}\n    </div>\n  ));\n\n  return (\n    <div className='form_gallery'>\n      {componentArr}\n      {componentArr.length === 0 && <h5>No components in \"definitions\"</h5>}\n      <div className='form_footer'>\n        <Add\n          addElem={(choice: string) => {\n            if (choice === 'card') {\n              addCardObj({\n                schema: { properties: definitionSchema },\n                uischema: definitionUiSchema,\n                mods: mods,\n                onChange: (newDefinitions, newDefinitionUis) => {\n                  const oldUi = newDefinitionUis;\n                  const newUi = {};\n\n                  Object.keys(oldUi).forEach((definedUiSchemaKey) => {\n                    if (\n                      !['definitions', 'ui:order'].includes(definedUiSchemaKey)\n                    )\n                      newUi[definedUiSchemaKey] = oldUi[definedUiSchemaKey];\n                  });\n                  onChange(newDefinitions.properties, newUi);\n                },\n                definitionData: definitionSchema,\n                definitionUi: definitionUiSchema,\n                categoryHash,\n              });\n            } else if (choice === 'section') {\n              addSectionObj({\n                schema: { properties: definitionSchema },\n                uischema: definitionUiSchema,\n                onChange: (newDefinitions, newDefinitionUis) => {\n                  const oldUi = newDefinitionUis;\n                  const newUi = {};\n\n                  Object.keys(oldUi).forEach((definedUiSchemaKey) => {\n                    if (\n                      !['definitions', 'ui:order'].includes(definedUiSchemaKey)\n                    )\n                      newUi[definedUiSchemaKey] = oldUi[definedUiSchemaKey];\n                  });\n                  onChange(newDefinitions.properties, newUi);\n                },\n                definitionData: definitionSchema,\n                definitionUi: definitionUiSchema,\n                categoryHash,\n              });\n            }\n          }}\n          hidden={\n            !!definitionSchema && Object.keys(definitionSchema).length !== 0\n          }\n        />\n      </div>\n    </div>\n  );\n}\n","// @flow\nimport * as React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport CardGallery from './CardGallery';\nimport {\n  parse,\n  stringify,\n  propagateDefinitionChanges,\n  generateCategoryHash,\n  excludeKeys,\n} from './utils';\nimport { arrows as arrowsStyle } from './styles';\nimport DEFAULT_FORM_INPUTS from './defaults/defaultFormInputs';\nimport type { Node } from 'react';\nimport type { Mods } from './types';\n\nconst useStyles = createUseStyles({\n  preDefinedGallery: {\n    display: 'flex',\n    flexDirection: 'column',\n    'text-align': 'center',\n    '& .fa': {\n      cursor: 'pointer',\n    },\n    '& .fa-question-circle': {\n      color: 'gray',\n    },\n    '& .fa-asterisk': {\n      'font-size': '.9em',\n      color: 'green',\n    },\n    ...arrowsStyle,\n    '& .form_footer': {\n      marginTop: '1em',\n      textAlign: 'center',\n      '& .fa': { cursor: 'pointer', color: '$green', fontSize: '1.5em' },\n    },\n    '& .fa-plus-square': {\n      color: 'green',\n      'font-size': '1.5em',\n      margin: '0 auto',\n    },\n    '& .card-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      width: '70%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid gray',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid gray',\n      },\n      '& .label': {\n        float: 'left',\n      },\n    },\n    '& .card-requirements': {\n      border: '1px dashed black',\n    },\n    '& .section-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      display: 'block',\n      width: '90%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid var(--gray)',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid var(--gray)',\n      },\n      '& .label': {\n        float: 'left',\n      },\n    },\n    '& .section-dependent': {\n      border: '1px dashed gray',\n    },\n    '& .section-requirements': {\n      border: '1px dashed black',\n    },\n    '& .fa-pencil-alt': {\n      border: '1px solid #1d71ad',\n      color: '#1d71ad',\n    },\n    '& .modal-body': {\n      maxHeight: '500px',\n      overflowY: 'scroll',\n    },\n    '& .card-container:hover': { border: '1px solid var(--green)' },\n    '& .card-dependent': { border: '1px dashed var(--gray)' },\n    '& .card-add': {\n      cursor: 'pointer',\n      display: 'block',\n      color: '$green',\n      fontSize: '1.5em',\n    },\n\n    '& .section-container:hover': { border: '1px solid var(--green)' },\n  },\n});\n\nexport default function PredefinedGallery({\n  schema,\n  uischema,\n  onChange,\n  mods,\n}: {\n  schema: string,\n  uischema: string,\n  onChange: (string, string) => any,\n  mods?: Mods,\n}): Node {\n  const classes = useStyles();\n  const schemaData = (parse(schema): { [string]: any }) || {};\n  const uiSchemaData = (parse(uischema): { [string]: any }) || {};\n  const allFormInputs = excludeKeys(\n    Object.assign(\n      {},\n      DEFAULT_FORM_INPUTS,\n      (mods && mods.customFormInputs) || {},\n    ),\n    mods && mods.deactivatedFormInputs,\n  );\n  const categoryHash = generateCategoryHash(allFormInputs);\n\n  React.useEffect(() => {\n    if (!uiSchemaData.definitions) {\n      // eslint-disable-next-line no-console\n      console.log('Parsing UI schema to assign UI for definitions');\n      // need to create definitions from scratch\n      const references = [];\n      // recursively search for all $refs in the schemaData\n      const findRefs = (name, schemaObject) => {\n        if (!schemaObject) return;\n        if (typeof schemaObject === 'object')\n          Object.keys(schemaObject).forEach((key) => {\n            if (typeof key === 'string') {\n              if (key === '$ref') references.push(name);\n              findRefs(key, schemaObject[key]);\n            }\n          });\n        if (Array.isArray(schemaObject))\n          schemaObject.forEach((innerObj) => {\n            findRefs(name, innerObj);\n          });\n      };\n\n      findRefs('root', schemaData);\n\n      uiSchemaData.definitions = {};\n      const referenceSet = new Set(references);\n      Object.keys(uiSchemaData).forEach((uiProp) => {\n        if (referenceSet.has(uiProp))\n          uiSchemaData.definitions[uiProp] = uiSchemaData[uiProp];\n      });\n      if (!Object.keys(uiSchemaData.definitions).length) {\n        uiSchemaData.definitions = undefined;\n      }\n      onChange(stringify(schemaData), stringify(uiSchemaData));\n    }\n  }, [uischema, schema]);\n  return (\n    <div className={classes.preDefinedGallery}>\n      <CardGallery\n        definitionSchema={schemaData.definitions}\n        definitionUiSchema={uiSchemaData.definitions}\n        onChange={(\n          newDefinitions: { [string]: any },\n          newDefinitionsUi: { [string]: any },\n        ) => {\n          schemaData.definitions = newDefinitions;\n          uiSchemaData.definitions = newDefinitionsUi;\n          // propagate changes in ui definitions to all relavant parties in main schema\n\n          propagateDefinitionChanges(\n            schemaData,\n            uiSchemaData,\n            (newSchema, newUiSchema) =>\n              onChange(stringify(newSchema), stringify(newUiSchema)),\n            categoryHash,\n          );\n        }}\n        mods={mods}\n        categoryHash={categoryHash}\n      />\n    </div>\n  );\n}\n"],"names":["useStyles","createUseStyles","checkbox","display","marginRight","FBCheckbox","onChangeValue","value","isChecked","label","use","disabled","id","dataTest","labelClassName","classjss","classes","classnames","potentialCheckboxId","checkboxId","React","undefined","FontAwesomeIcon","className","otherProps","props","Object","assign","FortAwesomeFontAwesomeIcon","collapseElement","cursor","marginTop","padding","fontSize","marginLeft","Collapse","disableToggle","toggleCollapse","isOpen","faCaretDown","faCaretRight","title","RSCollapse","children","FBRadioButton","checked","name","onChange","required","autoFocus","useState","Math","floor","random","radio","marginBottom","height","verticalAlign","FBRadioGroup","options","defaultValue","horizontal","toString","map","option","index","typeMap","alert","faAsterisk","help","faQuestionCircle","toolTip","color","Example","text","type","textDecoration","parse","JSON","stringify","obj","defaultDataProps","category","allFormInputs","defaultDataSchema","defaultUiProps","defaultUiSchema","categoryType","getCardBody","cardBody","categoryToNameMap","categoryNameMap","keys","forEach","inputName","displayName","updateElementNames","elementArray","elementNames","elem","newElem","neighborNames","generateCategoryHash","categoryHash","categoryName","formInput","matchIf","match","types","hash","widget","field","format","$ref","Error","getCardCategory","cardProps","currentHash","dataOptions","uiOptions","console","error","supportedPropertyParameters","Set","supportedUiParameters","checkObjectForUnsupportedFeatures","schema","uischema","supportedWidgets","supportedFields","supportedOptions","unsupportedFeatures","property","has","push","uiProperty","propDefined","properties","includes","dependencies","dependencyKey","parameter","oneOf","grouping","entries","element","key","uiProp","uiOption","checkForUnsupportedFeatures","widgets","fields","inputType","possibleOptions","Array","isArray","generateDependencyElement","dataProps","uiProperties","requiredNames","definitionData","definitionUi","useDefinitionDetails","uiProps","newElement","elementDetails","pathArr","split","definedUiProps","propType","reservedKeys","uiKey","generateElementPropsFromSchemas","parameters","elementDict","startsWith","parent","group","possibilityIndex","possibility","dependents","requiredValues","dependent","cardPropList","remainder","remCard","countElementsFromSchema","schemaData","elementCount","generateSchemaElementFromElement","description","returnElement","length","prop","generateSchemaFromElementProps","elementArr","newSchema","dependentElements","dependentElement","add","elementName","childrenComponents","child","filter","generateUiSchemaFromElementProps","uiSchema","uiOrder","definitions","substring","getCardParameterInputComponentForType","modalBody","updateSchemas","newUiSchema","DEFAULT_INPUT_NAME","getIdFromElementsBlock","elements","names","defaultNameLength","max","Number","parseInt","isNaN","addCardObj","mods","newElementObjArr","i","getNewElementDefaultDataOptions","newElementDefaultUiSchema","splice","addSectionObj","generateElementComponentsFromSchemas","uiSchemaData","hideKey","path","cardOpenArray","setCardOpenArray","Card","Section","elementPropArr","elementList","elementProp","expanded","TypeSpecificParameters","React.createElement","newCardObj","newDataProps","newUiProps","propName","oldElement","slice","tempBlock","choice","newState","newRef","oldSection","newName","newDependents","onDragEnd","result","details","src","source","dest","destination","propagateElementChange","updatedElementArr","childrenElements","updatedChildren","propagateDefinitionChanges","bodyElements","updatedBodyElements","subtractArray","array1","array2","reduce","acc","curr","v","excludeKeys","keysHash","newElementDefaultDataOptions","getRandomId","chars","numberOfChars","randomIdLength","from","join","DependencyWarning","elementId","definedVals","val","undefinedVals","Tooltip","CardSelector","possibleChoices","chosenChoices","placeholder","chosenChoice","faTimes","cardEnumOption","width","flexDirection","justifyContent","CardEnumOptions","initialValues","showNames","possibleValues","ev","newVal","target","parseFloat","isInteger","React.Fragment","faPlus","ValueSelector","parentEnums","parentType","parentName","parentSchema","enumType","enumArr","combination","string","oldCombo","number","array","object","newCase","propArr","newEnum","DependencyPossibility","onDelete","newPossibility","dependencyField","textAlign","border","borderRadius","margin","checkIfValueBasedDependency","valueBased","DependencyField","selection","cardModal","paddingTop","paddingBottom","CardModal","componentProps","onClose","componentPropsState","setComponentProps","GeneralParameterInputs","CardBody","CardGeneralParameterInputs","showObjectNameInput","keyState","setKeyState","keyError","setKeyError","titleState","setTitleState","descriptionState","setDescriptionState","categoryMap","fetchLabel","labelName","defaultLabel","labels","objectNameLabel","displayNameLabel","descriptionLabel","inputTypeLabel","availableInputTypes","definitionsInSchema","inputKeys","deactivatedFormInputs","sort","a","b","localeCompare","tooltipDescriptions","cardObjectName","cardDisplayName","cardDescription","cardInputType","newCategory","newProps","firstDefinition","addDetails","borderBottom","Add","addElem","hidden","popoverOpen","setPopoverOpen","createChoice","setCreateChoice","faPlusSquare","cardEntries","backgroundColor","fontWeight","cardInteractions","onMoveUp","onMoveDown","cardOpen","setCardOpen","modalOpen","setModalOpen","faArrowUp","faArrowDown","faPencilAlt","faTrash","newComponentProps","CardDefaultParameterInputs","getInputCardBodyComponent","InputCardBodyComponent","Checkbox","MultipleChoice","enumArray","containsUnparsableString","some","containsString","isNumber","setIsNumber","enumNames","newNum","newEnumNames","defaultInputs","dateTime","date","time","dropdown","sectionContainer","borderTop","onNameChange","onRequireToggle","onDependentsChange","reference","elementNum","defaultCollapseStates","keyName","setKeyName","cardSectionObjectName","cardSectionDisplayName","cardSectionDescription","message","providedDroppable","innerRef","droppableProps","providedDraggable","draggableProps","dragHandleProps","arrows","PlaceholderInput","formatDictionary","email","hostname","uri","regex","formatTypeDictionary","url","autoDictionary","username","password","country","CardShortAnswerParameterInputs","minLength","maxLength","pattern","ShortAnswerField","Password","shortAnswerInput","shortAnswer","CardLongAnswerParameterInputs","LongAnswer","longAnswerInput","longAnswer","CardNumberParameterInputs","multipleOf","minimum","exclusiveMinimum","newMin","maximum","exclusiveMaximum","newMax","NumberField","numberInputs","integer","CardArrayParameterInputs","minItems","maxItems","getInnerCardComponent","defaultFormInputs","InnerCard","customFormInputs","items","item","newArr","_Card","shortAnswerInputs","longAnswerInputs","ArrayInputs","CardReferenceParameterInputs","RefChoice","currentValueLabel","referenceInputs","ref","DEFAULT_FORM_INPUTS","arrayInputs","formBuilder","arrowsStyle","formHead","formBody","maxHeight","overflowY","minWidth","cssFloat","formFooter","FormBuilder","showFormHead","formNameLabel","formDescriptionLabel","CardGallery","definitionSchema","definitionUiSchema","componentArr","newDefinitions","newDefinitionUis","oldUi","newUi","definedUi","definedUiSchemaKey","preDefinedGallery","PredefinedGallery","log","references","findRefs","schemaObject","innerObj","referenceSet","newDefinitionsUi"],"mappings":"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"}